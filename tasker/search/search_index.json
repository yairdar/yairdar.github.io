{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"tasker \u00b6 task go next level flowchart TB A_[_INIT_] --> ci-flow ci-flow --> one ci-flow --> two ci-flow --> three one --> Z_ two --> three three --> four four --> Z_[_OVER_]","title":"tasker"},{"location":"index.html#tasker","text":"task go next level flowchart TB A_[_INIT_] --> ci-flow ci-flow --> one ci-flow --> two ci-flow --> three one --> Z_ two --> three three --> four four --> Z_[_OVER_]","title":"tasker"},{"location":"changelog.html","text":"Tasker Changelog \u00b6 v0.0.3-d2021.10-... \u00b6 restructure docs v0.0.2-d2021.10-17 \u00b6 build with nuitka build with pyinstaller v0.0.1-d2021.10-01 \u00b6 support dev on windows add documentation implement parsing of staticly linked tasks","title":"Tasker Changelog"},{"location":"changelog.html#tasker-changelog","text":"","title":"Tasker Changelog"},{"location":"changelog.html#v003-d202110-","text":"restructure docs","title":"v0.0.3-d2021.10-..."},{"location":"changelog.html#v002-d202110-17","text":"build with nuitka build with pyinstaller","title":"v0.0.2-d2021.10-17"},{"location":"changelog.html#v001-d202110-01","text":"support dev on windows add documentation implement parsing of staticly linked tasks","title":"v0.0.1-d2021.10-01"},{"location":"guides/graphs-guild.html","text":"Graph rendering \u00b6 Amaizing python grapch gallery \u00b6 https://www.python-graph-gallery.com/barplot/ python graph render \u00b6 https://pyvis.readthedocs.io/en/latest/documentation.html","title":"Graph rendering"},{"location":"guides/graphs-guild.html#graph-rendering","text":"","title":"Graph rendering"},{"location":"guides/graphs-guild.html#amaizing-python-grapch-gallery","text":"https://www.python-graph-gallery.com/barplot/","title":"Amaizing python grapch gallery"},{"location":"guides/graphs-guild.html#python-graph-render","text":"https://pyvis.readthedocs.io/en/latest/documentation.html","title":"python graph render"},{"location":"guides/jupyter-guide.html","text":"Jupyter Guide \u00b6 Misc \u00b6 Jupyter Book","title":"Jupyter Guide"},{"location":"guides/jupyter-guide.html#jupyter-guide","text":"","title":"Jupyter Guide"},{"location":"guides/jupyter-guide.html#misc","text":"Jupyter Book","title":"Misc"},{"location":"guides/opensource.html","text":"Opensource World \u00b6 A good idea is to support tools that use and would like to continue to use https://opencollective.com/task#category-BUDGET","title":"Opensource World"},{"location":"guides/opensource.html#opensource-world","text":"A good idea is to support tools that use and would like to continue to use https://opencollective.com/task#category-BUDGET","title":"Opensource World"},{"location":"guides/parsing-yaml.html","text":"Parsing of Yaml \u00b6 yaml parsing \u00b6 https://stackoverflow.com/questions/1773805/how-can-i-parse-a-yaml-file-in-python json schema more detaie \u00b6 https://json-schema.org/learn/getting-started-step-by-step.html pytest \u00b6 pytest tricks pytest steps pytest harvest results librarie more on pytest pytest cases pytest end to end","title":"Parsing of Yaml"},{"location":"guides/parsing-yaml.html#parsing-of-yaml","text":"","title":"Parsing of Yaml"},{"location":"guides/parsing-yaml.html#yaml-parsing","text":"https://stackoverflow.com/questions/1773805/how-can-i-parse-a-yaml-file-in-python","title":"yaml parsing"},{"location":"guides/parsing-yaml.html#json-schema-more-detaie","text":"https://json-schema.org/learn/getting-started-step-by-step.html","title":"json schema more detaie"},{"location":"guides/parsing-yaml.html#pytest","text":"pytest tricks pytest steps pytest harvest results librarie more on pytest pytest cases pytest end to end","title":"pytest"},{"location":"guides/pydantic-guild.html","text":"Pydantic Guide \u00b6 Essentials \u00b6 Settings Management","title":"Pydantic Guide"},{"location":"guides/pydantic-guild.html#pydantic-guide","text":"","title":"Pydantic Guide"},{"location":"guides/pydantic-guild.html#essentials","text":"Settings Management","title":"Essentials"},{"location":"guides/task-magic-guide-nix.html","text":"Task Magic Guide Nix \u00b6 In this guide we will focus on task/go task executor. It's interesting due to its simple configuration, which can be easily parsed and reuse on any engine. Get Started \u00b6 This guide assumes you using linux or mac os. For Windows Guide refer ./task-magic-guide-windows Using Tools \u00b6 We use very small number of tools, we prefer them to be portable and composable, following linux way of one tool one mission. Task \u00b6 ???+ type \"optional explicit title within double quotes\" \"optional explicit title within double quotes\" Any number of other indented markdown elements. This is the second paragraph. C sdf #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Task Magic Guide Nix"},{"location":"guides/task-magic-guide-nix.html#task-magic-guide-nix","text":"In this guide we will focus on task/go task executor. It's interesting due to its simple configuration, which can be easily parsed and reuse on any engine.","title":"Task Magic Guide Nix"},{"location":"guides/task-magic-guide-nix.html#get-started","text":"This guide assumes you using linux or mac os. For Windows Guide refer ./task-magic-guide-windows","title":"Get Started"},{"location":"guides/task-magic-guide-nix.html#using-tools","text":"We use very small number of tools, we prefer them to be portable and composable, following linux way of one tool one mission.","title":"Using Tools"},{"location":"guides/task-magic-guide-nix.html#task","text":"???+ type \"optional explicit title within double quotes\" \"optional explicit title within double quotes\" Any number of other indented markdown elements. This is the second paragraph. C sdf #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Task"},{"location":"guides/task-magic-guide-windows.html","text":"Task Magic Guide Windows \u00b6 In this guide we will focus on task/go task executor. It's interesting due to its simple configuration, which can be easily parsed and reuse on any engine. Get Started \u00b6 This guide assumes you using Windows. For linux refer ./task-magic-guide-nix","title":"Task Magic Guide Windows"},{"location":"guides/task-magic-guide-windows.html#task-magic-guide-windows","text":"In this guide we will focus on task/go task executor. It's interesting due to its simple configuration, which can be easily parsed and reuse on any engine.","title":"Task Magic Guide Windows"},{"location":"guides/task-magic-guide-windows.html#get-started","text":"This guide assumes you using Windows. For linux refer ./task-magic-guide-nix","title":"Get Started"},{"location":"guides/windows-taskgo-guide.html","text":"Task and Windows \u00b6 On Windows we assume WSL with linux and bash so it's the same as linux in docker But it's not really on \"windows\" Windows Development Base \u00b6 On Windows powershell is more in use then bash or cmd. However, we would like to keep most of bash code and state of mind. There are several builds of gnu tools for windows, the most famous is cygwin and migwin . We will need a Git For windows Download From git-scm.com Site Git Tools come with bash , ls , tee and of course git itself. Unfortunately it's not enough or comfortable work, we still miss xargs and good-looking terminal. Windows Development Cmder \u00b6 For comfortable shell experience we need autocomplete search in history aliases tty Fortunately Samuel Vasko created a composition of con-emu, migwin and cmd dark magic. This bundle called Cmder and it provides very good shell experience. Sample view of console C : \\Users\\user\\_wd\\_public_\\tasker (yairda.parse.sceleton -> origin) ( base ) \u03bb ls _infra/ _out.log LICENSE tasker/ tasks/ tickets/ _layout_/ docs/ README.md Taskfile.yml tests/ version/ C : \\Users\\user\\_wd\\_public_\\tasker (yairda.parse.sceleton -> origin) ( base ) \u03bb ls | xargs -n1 echo _infra/ _layout_/ _out.log C : \\Users\\user\\_wd\\_public_\\tasker (yairda.parse.sceleton -> origin) ( base ) \u03bb Cmder's activation in any Cmd Window \u00b6 There are ways to deeply integrate cmder into VsCode or Pycharm. Let's start from direct change of cmd to nice shell. Consider your username is user and you upacked cmder to C:\\\\Users\\\\user\\\\Apps\\\\cmder folder. For cmder activation run cmd /k C:\\\\Users\\\\user\\\\Apps\\\\cmder\\\\vendor\\\\bin\\\\vscode_init.cmd Cmder's integration with VsCode \u00b6 Can I use Cmder's shell with the terminal on Windows? Yes, to use the Cmder shell in VS Code, you need to add the following settings to your settings.json file: { \"terminal.integrated.profiles.windows\" : { \"cmder\" : { \"path\" : \"C:\\\\WINDOWS\\\\System32\\\\cmd.exe\" , \"args\" : [ \"/K\" , \"C:\\\\cmder\\\\vendor\\\\bin\\\\vscode_init.cmd\" ] } }, \"terminal.integrated.defaultProfile.windows\" : \"cmder\" } More on integration with vscode cmder wiki on vscode cmder vscode 2021 use-cmders-shell-with-the-terminal-on-windows Cmder's integration with PyCharm or Idea \u00b6 !!! TODO: Please add simple instruction !!! More on integration with pycharm https://www.jetbrains.com/help/pycharm/terminal-emulator.html#configure-the-terminal-emulator https://intellij-support.jetbrains.com/hc/en-us/community/posts/206334729-use-cmder-or-conemu-in-Terminal-without-opening-new-window https://stackoverflow.com/questions/66373669/cmder-terminal-integration-into-intellij-webstorm-goland-with-aliases https://stackoverflow.com/questions/49615928/how-get-cmder-running-behind-python-debugger-in-intellij-or-pycharm Tasker and Cmder \u00b6 Taskgo has number of tricks to make things easy between posix and windows. Please see https://taskfile.dev/#/usage?id=gos-template-engine OS : os name echo '{{if eq OS \"windows\"}}windows-command{{else}}unix-command{{end}}' fromSlash : Opposite of toSlash. Does nothing on Unix, but on Windows converts a string from / path format to \\. echo '{{fromSlash \"path/to/file\"}}' exeExt : Returns the right executable extension for the current OS (\".exe\" for Windows, \"\" for others). Tasker pitfalls \u00b6 color output when working in cmder taskgo will output colors to console. to disable it use set NO_COLOR=1","title":"Task and Windows"},{"location":"guides/windows-taskgo-guide.html#task-and-windows","text":"On Windows we assume WSL with linux and bash so it's the same as linux in docker But it's not really on \"windows\"","title":"Task and Windows"},{"location":"guides/windows-taskgo-guide.html#windows-development-base","text":"On Windows powershell is more in use then bash or cmd. However, we would like to keep most of bash code and state of mind. There are several builds of gnu tools for windows, the most famous is cygwin and migwin . We will need a Git For windows Download From git-scm.com Site Git Tools come with bash , ls , tee and of course git itself. Unfortunately it's not enough or comfortable work, we still miss xargs and good-looking terminal.","title":"Windows Development Base"},{"location":"guides/windows-taskgo-guide.html#windows-development-cmder","text":"For comfortable shell experience we need autocomplete search in history aliases tty Fortunately Samuel Vasko created a composition of con-emu, migwin and cmd dark magic. This bundle called Cmder and it provides very good shell experience. Sample view of console C : \\Users\\user\\_wd\\_public_\\tasker (yairda.parse.sceleton -> origin) ( base ) \u03bb ls _infra/ _out.log LICENSE tasker/ tasks/ tickets/ _layout_/ docs/ README.md Taskfile.yml tests/ version/ C : \\Users\\user\\_wd\\_public_\\tasker (yairda.parse.sceleton -> origin) ( base ) \u03bb ls | xargs -n1 echo _infra/ _layout_/ _out.log C : \\Users\\user\\_wd\\_public_\\tasker (yairda.parse.sceleton -> origin) ( base ) \u03bb","title":"Windows Development Cmder"},{"location":"guides/windows-taskgo-guide.html#cmders-activation-in-any-cmd-window","text":"There are ways to deeply integrate cmder into VsCode or Pycharm. Let's start from direct change of cmd to nice shell. Consider your username is user and you upacked cmder to C:\\\\Users\\\\user\\\\Apps\\\\cmder folder. For cmder activation run cmd /k C:\\\\Users\\\\user\\\\Apps\\\\cmder\\\\vendor\\\\bin\\\\vscode_init.cmd","title":"Cmder's activation in any Cmd Window"},{"location":"guides/windows-taskgo-guide.html#cmders-integration-with-vscode","text":"Can I use Cmder's shell with the terminal on Windows? Yes, to use the Cmder shell in VS Code, you need to add the following settings to your settings.json file: { \"terminal.integrated.profiles.windows\" : { \"cmder\" : { \"path\" : \"C:\\\\WINDOWS\\\\System32\\\\cmd.exe\" , \"args\" : [ \"/K\" , \"C:\\\\cmder\\\\vendor\\\\bin\\\\vscode_init.cmd\" ] } }, \"terminal.integrated.defaultProfile.windows\" : \"cmder\" } More on integration with vscode cmder wiki on vscode cmder vscode 2021 use-cmders-shell-with-the-terminal-on-windows","title":"Cmder's integration with VsCode"},{"location":"guides/windows-taskgo-guide.html#cmders-integration-with-pycharm-or-idea","text":"!!! TODO: Please add simple instruction !!! More on integration with pycharm https://www.jetbrains.com/help/pycharm/terminal-emulator.html#configure-the-terminal-emulator https://intellij-support.jetbrains.com/hc/en-us/community/posts/206334729-use-cmder-or-conemu-in-Terminal-without-opening-new-window https://stackoverflow.com/questions/66373669/cmder-terminal-integration-into-intellij-webstorm-goland-with-aliases https://stackoverflow.com/questions/49615928/how-get-cmder-running-behind-python-debugger-in-intellij-or-pycharm","title":"Cmder's integration with PyCharm or Idea"},{"location":"guides/windows-taskgo-guide.html#tasker-and-cmder","text":"Taskgo has number of tricks to make things easy between posix and windows. Please see https://taskfile.dev/#/usage?id=gos-template-engine OS : os name echo '{{if eq OS \"windows\"}}windows-command{{else}}unix-command{{end}}' fromSlash : Opposite of toSlash. Does nothing on Unix, but on Windows converts a string from / path format to \\. echo '{{fromSlash \"path/to/file\"}}' exeExt : Returns the right executable extension for the current OS (\".exe\" for Windows, \"\" for others).","title":"Tasker and Cmder"},{"location":"guides/windows-taskgo-guide.html#tasker-pitfalls","text":"color output when working in cmder taskgo will output colors to console. to disable it use set NO_COLOR=1","title":"Tasker pitfalls"},{"location":"tasker/mermaid.flowchart.html","text":"provide : art:loaded.doc flowchart subgraph SOURCE-DOC init-block-access --> SOURCE-DOC-INFO & SOURCE-DOC-R SOURCE-DOC-INFO --> over-block-access SOURCE-DOC-R --> over-block-access subgraph SOURCE-DOC-INFO arequire:arg:_source_ --> |upath|provide:_art.task:docs.stream_ end subgraph SOURCE-DOC-R source:upath[/_source_=Taskfile.yml:default\\] --> |rclone cat _source_ > - | load:upath.to.text.stream --> |yq3 read - --json|text-to-json: --> loaded.doc[\\loaded.doc/]:::artifact_doc classDef someclass fill:#f96; loaded.doc end end subgraph TaskList-DOC subgraph TaskList-DOC-REQUIRE require:_art.task:docs.stream_ --> provide:_art.task:names.stream_ end subgraph TaskList-DOCR query-tasks compose-report require:_art.task:docs.stream_ --> query-tasks compose-report --> provide:_art.task:names.stream_ source.doc[/source.doc:loaded.doc\\] query-tasks --> source.doc --> |jq '.tasks _l_ keys|apply:jq.tasks[source.doc:jq.query:tasks.to.keys:list.txt] --> |jq '.tasks _l_ keys|apply:jq._list_[source.doc:jq.query:tasks.to.keys:list.txt] --> S[\\\"A dec char:#9829;\"/] --> compose-report query-tasks --> meta --> |AS|meta2 --> |AS|meta3 --> |AS|meta4 --> compose-report query-tasks --> beta --> |AS|beta2 --> |AS|beta3 --> |AS|beta4 --> compose-report end end provide:_art.task:docs.stream_ ==> |bind|require:_art.task:docs.stream_","title":"Mermaid.flowchart"}]}