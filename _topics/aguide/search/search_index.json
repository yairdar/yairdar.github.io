{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Aguide \u00b6 A guide to Sowftware Gardening Get Started \u00b6 We consider that you have conda or python installed and working environment activated. # clone this repo git clone https://github.com/yairdar/aguide.git # or via ssh with arg=git@github.com:yairdar/aguide.git # install mkdocs deps in current envoronment task docs-builder:install-pip-deps # try to build site from source task docs-builder:build-site Now we can see documentation using task docs-builder:serve-source Autp Port Forwarding Click on http link in vscode (with ctrl(win), alt(macos)) and it will create port forward and open link in browser The Full picture \u00b6 FULL Picture graph LR A --> B Documentation Examples \u00b6 Take a look on documentation trics or here Take a look on documentation trics Nature of Software Architecture \u00b6 Guide To Comfortable Software Development Process Areas \u00b6 Execution, Compute Query Store Storage/Memory Transfer Network Operators \u00b6 Elements \u00b6 Logging","title":"Aguide"},{"location":"index.html#aguide","text":"A guide to Sowftware Gardening","title":"Aguide"},{"location":"index.html#get-started","text":"We consider that you have conda or python installed and working environment activated. # clone this repo git clone https://github.com/yairdar/aguide.git # or via ssh with arg=git@github.com:yairdar/aguide.git # install mkdocs deps in current envoronment task docs-builder:install-pip-deps # try to build site from source task docs-builder:build-site Now we can see documentation using task docs-builder:serve-source Autp Port Forwarding Click on http link in vscode (with ctrl(win), alt(macos)) and it will create port forward and open link in browser","title":"Get Started"},{"location":"index.html#the-full-picture","text":"FULL Picture graph LR A --> B","title":"The Full picture"},{"location":"index.html#documentation-examples","text":"Take a look on documentation trics or here Take a look on documentation trics","title":"Documentation Examples"},{"location":"index.html#nature-of-software-architecture","text":"Guide To Comfortable Software Development Process","title":"Nature of Software Architecture"},{"location":"index.html#areas","text":"Execution, Compute Query Store Storage/Memory Transfer Network","title":"Areas"},{"location":"index.html#operators","text":"","title":"Operators"},{"location":"index.html#elements","text":"Logging","title":"Elements"},{"location":"guides/base-tools-intro.html","text":"Essential Tools \u00b6 Minimal toolset that we need is rlone task yq yq v4 While Os-Sys Minimal toolset docker ubuntu","title":"Essential Tools"},{"location":"guides/base-tools-intro.html#essential-tools","text":"Minimal toolset that we need is rlone task yq yq v4 While Os-Sys Minimal toolset docker ubuntu","title":"Essential Tools"},{"location":"guides/dev-in-container.html","text":"Developing in container \u00b6 We will overview developing in container without mappings. Spin Up your container \u00b6 Just your dev image no mappings needed Setup Contaner from originator \u00b6 Now we need to sync our current credentials into dev container . # navigate into raw task-libpack cd _infra/dev-in-container-pack # Run task setup-dev-pod-from-here task setup-dev-pod-from-here #","title":"Developing in container"},{"location":"guides/dev-in-container.html#developing-in-container","text":"We will overview developing in container without mappings.","title":"Developing in container"},{"location":"guides/dev-in-container.html#spin-up-your-container","text":"Just your dev image no mappings needed","title":"Spin Up your container"},{"location":"guides/dev-in-container.html#setup-contaner-from-originator","text":"Now we need to sync our current credentials into dev container . # navigate into raw task-libpack cd _infra/dev-in-container-pack # Run task setup-dev-pod-from-here task setup-dev-pod-from-here #","title":"Setup Contaner from originator"},{"location":"guides/jq-guide.html","text":"JQ guide \u00b6 https://earthly.dev/blog/jq-select/ Background: Fingers, Head, and Google https://jqterm.com/?query= . https://github.com/rjz/jq-tutorial Basic concepts \u00b6 origin_url: https://gist.github.com/olih/f7437fb6962fb3ee9fe95bda8d2c8fa4 The syntax for jq is pretty coherent: Syntax Description , Filters separated by a comma will produce multiple independent outputs ? Will ignores error if the type is unexpected [] Array construction {} Object construction + Concatenate or Add - Difference of sets or Substract length Size of selected element | Pipes are used to chain commands in a similar fashion than bash Dealing with json objects \u00b6 Description Command Display all keys jq 'keys' Adds + 1 to all items jq 'map_values(.+1)' Delete a key jq 'del(.foo)' Convert an object to array to_entries &#124; map([.key, .value]) Dealing with fields \u00b6 Description Command Concatenate two fields fieldNew=.field1+' '+.field2 Dealing with json arrays \u00b6 Slicing and Filtering \u00b6 Description Command All jq .[] First jq '.[0]' Range jq '.[2:4]' First 3 jq '.[:3]' Last 2 jq '.[-2:]' Before Last jq '.[-2]' Select array of int by value jq 'map(select(. >= 2))' Select array of objects by value ** jq '.[] | select(.id == \"second\")'** Select by type ** jq '.[] | numbers' ** with type been arrays, objects, iterables, booleans, numbers, normals, finites, strings, nulls, values, scalars Mapping and Transforming \u00b6 Description Command Add + 1 to all items jq 'map(.+1)' Delete 2 items jq 'del(.[1, 2])' Concatenate arrays jq 'add' Flatten an array jq 'flatten' Create a range of numbers jq '[range(2;4)]' Display the type of each item jq 'map(type)' Sort an array of basic type jq 'sort' Sort an array of objects jq 'sort_by(.foo)' Group by a key - opposite to flatten jq 'group_by(.foo)' Minimun value of an array jq 'min' .See also min, max, min_by(path_exp), max_by(path_exp) Remove duplicates jq 'unique' or jq 'unique_by(.foo)' or jq 'unique_by(length)' Reverse an array jq 'reverse'","title":"JQ guide"},{"location":"guides/jq-guide.html#jq-guide","text":"https://earthly.dev/blog/jq-select/ Background: Fingers, Head, and Google https://jqterm.com/?query= . https://github.com/rjz/jq-tutorial","title":"JQ guide"},{"location":"guides/jq-guide.html#basic-concepts","text":"origin_url: https://gist.github.com/olih/f7437fb6962fb3ee9fe95bda8d2c8fa4 The syntax for jq is pretty coherent: Syntax Description , Filters separated by a comma will produce multiple independent outputs ? Will ignores error if the type is unexpected [] Array construction {} Object construction + Concatenate or Add - Difference of sets or Substract length Size of selected element | Pipes are used to chain commands in a similar fashion than bash","title":"Basic concepts"},{"location":"guides/jq-guide.html#dealing-with-json-objects","text":"Description Command Display all keys jq 'keys' Adds + 1 to all items jq 'map_values(.+1)' Delete a key jq 'del(.foo)' Convert an object to array to_entries &#124; map([.key, .value])","title":"Dealing with json objects"},{"location":"guides/jq-guide.html#dealing-with-fields","text":"Description Command Concatenate two fields fieldNew=.field1+' '+.field2","title":"Dealing with fields"},{"location":"guides/jq-guide.html#dealing-with-json-arrays","text":"","title":"Dealing with json arrays"},{"location":"guides/jq-guide.html#slicing-and-filtering","text":"Description Command All jq .[] First jq '.[0]' Range jq '.[2:4]' First 3 jq '.[:3]' Last 2 jq '.[-2:]' Before Last jq '.[-2]' Select array of int by value jq 'map(select(. >= 2))' Select array of objects by value ** jq '.[] | select(.id == \"second\")'** Select by type ** jq '.[] | numbers' ** with type been arrays, objects, iterables, booleans, numbers, normals, finites, strings, nulls, values, scalars","title":"Slicing and Filtering"},{"location":"guides/jq-guide.html#mapping-and-transforming","text":"Description Command Add + 1 to all items jq 'map(.+1)' Delete 2 items jq 'del(.[1, 2])' Concatenate arrays jq 'add' Flatten an array jq 'flatten' Create a range of numbers jq '[range(2;4)]' Display the type of each item jq 'map(type)' Sort an array of basic type jq 'sort' Sort an array of objects jq 'sort_by(.foo)' Group by a key - opposite to flatten jq 'group_by(.foo)' Minimun value of an array jq 'min' .See also min, max, min_by(path_exp), max_by(path_exp) Remove duplicates jq 'unique' or jq 'unique_by(.foo)' or jq 'unique_by(length)' Reverse an array jq 'reverse'","title":"Mapping and Transforming"},{"location":"guides/minio-guilde.html","text":"Minio Guide \u00b6 Rclone vs Minio \u00b6 https://www.libhunt.com/compare-minio-vs-rclone?ref=compare https://forum.rclone.org/t/recommendations-for-using-rclone-with-a-minio-10m-files/14472 https://golangrepo.com/tag/terraform-provider-minio_star_1 https://www.huuphan.com/2021/08/rclone-backup-all-vps-to-microsoft.html https://awstools.dev/ https://opensourcelibs.com/libs/s3 https://strobelstefan.org/2021/03/02/rclone-dateien-von-git-repository-automatisch-zu-nexcloud-uebertragen/ Awesome Minio \u00b6 from https://github.com/minio/awesome-minio A curated list of Minio community projects inspired by awesome-go. content A curated list of Minio community projects inspired by awesome-go . Contribution Guidelines \u00b6 Add entries alphabetically, under the appropriate category. To add, remove, or change things on the list: Submit a pull request. Description should contain a link with the name of the package/project/website. Do not exceed more than a paragraph. Cloud - PaaS \u00b6 Cloudron - Cloudron is a platform that makes it easy to run web apps on your server and keep them up-to-date. Cloudron supports storing it's backups on Minio, you can read more here . Minio itself has been packaged as a Cloudron App - you can try it in the demo (username: cloudron password: cloudron) Minio on Cloudron App Store - Package Source . Hephy Workflow (formerly known as Deis Workflow) - an open source Platform-as-a-Service for Kubernetes . Workflow uses Minio by default to store all internal application metadata and database backups. Jelastic - Jelastic is a multi-cloud PaaS and CaaS for business. It uses Minio as an S3 compatible object storage server in Docker containers. minio-dist-boshrelease - Cloud Foundry BOSH is an open source tool chain for release engineering, deployment and lifecycle management of large scale distributed services. minio-dist-boshrelease will help easily install the distributed version of Minio . minio-dokku - Dockerfile to run Minio on Dokku PaaS. Rafter - Kubernetes-native files/assets store powered by MinIO. It extends Kubernetes with Custom Resource Definitions like AssetGroup, Asset and Bucket. It supports webhook approach that you can modify/validate/analyze a file asynchronously before it is being saved into MinIO. sloppy.io - sloppy.io is the fastest way to deploy your docker container online. We provide the infrastructure and workflow to run container applications and micro services. Access our platform over the web, via CLI or our own API. Check out Deploying Minio to sloppy.io for further info! Univention Corporate Server - Univention Corporate Server (UCS) is the innovative basis for the cost-efficient operation and easy administration of server applications and entire IT infrastructures. The integrated App Center offers a multitude of enterprise solutions, which can be run or operated virtually with just a few clicks. Minio has been packages as an app for Univention - you can try it from the Univention App Center - Source . Cloud - IaaS \u00b6 Digital Ocean - Deploy an SSD cloud server in 55 seconds. Eucalyptus - Eucalyptus is an open solution to build private and hybrid clouds that are compatible with Amazon Web Services. Minio can be used as an object storage backend for Eucalyptus. Ha-Minio - Configures Minio, as a S3 compatible cloud storage server for DigitalOcean in a highly available fashion. Onlinetech - Secure, compliant enterprise cloud. OVH - Build your own infrastructure with OVH public cloud.. Packet - Packet is a baremetal cloud provider. Plumbery - Plumbery is an open source project that was initiated by Dimension Data to accelerate digital transformation. It recommends using Minio as a standalone object storage. s3-tus-store - Minio is the supported storage backend for https://tus.io/ . Tus is an open protocol for resumable file uploads. ScaleWay - Scalable and affordable cloud and bare-metal servers (European DC). SSD Nodes - Simple, high performance cloud provider with truly personalized support. DevOps - CI/CD \u00b6 drone.io - drone.io is continuous integration for Github and Bitbucket, that monitors your code for bugs. It uses Minio as an AWS S3 cloud storage alternative. Gorbachev IO - Gorbachev is a continuous integration platform, used to manage reproducible research at Dragonfly Data Science. Minio tools are awesome, and the community is supportive and responsive. mkrepo - maintains an RPM or DEB repository in S3, and periodically regenerates metadata. You can use Minio as a convenient and inexpensive storage for your CI. s3-resource-simple - s3-resource-simple is Concourse CI's resource for uploading files to S3. It supports Minio as an object storage backend. puppet-minio - Puppet module to manage Minio installations. Uses the binary, does not (yet) support Docker based installation. (Requires Puppet version 4+) Cloud/SaaS Applications \u00b6 Appknox - Appknox detects & addresses vulnerabilities in mobile apps within minutes. Managing storage was a nightmare for us before Minio came along. We use Minio to store all our ipa/apk files and pdf reports that gets auto-nenerated. We are an enterprise startup and we offer on-premise and private-cloud installations of our cloud-based scanner. We have deployed our code base on AWS, Google, Azure, multiple on-premise installations and private cloud. Before Mino came along - we had to write and maintain Python libraries for each platform and maintain them. Some of the changes that we make cannot be even tested - because it is deployed on-premise which we dont have access to. Thankfully, we came across Minio. Now we just install minio everywhere and forget about storage. Minio Rocks! Blockai - Blockai helps artists claim their copyrights and protects them, for free. It uses Minio for all internal development and testing as an AWS S3 compatible object storage service. Cosmic App - Cosmic App uses Minio for storing client files and quote information for commercial brokers. Files are packaged up for lenders including high street banks to access securely. Crisp - Crisp is a Customer Intelligence Platform. It helps teams know, understand and communicate with their customers, from multiple channels (chat, email). Minio is used to securely store user file uploads. Files are uploaded from the chatbox, operator dashboard and email attachments. Minio completely replaces S3 and brings more control to user data safety. dapploy - dapploy is a solution to create private app stores to deploy iOS and Android applications to your team, company or organization. Minio is easily integrated with dapploy's architecture and docker environment. Minio is used to store application packages - ipas, apks, icons and images. Minio's great feature among others is the ability to have presigned urls while downloading resources. We use that a lot. Thanks for your good documentation and community. DBHub.io - Online storage, visualisation, and collaboration for SQLite databases. Minio is the primary object store for the SQLite databases. GitLab - GitLab is an open source software to collaborate on code. It uses Minio to store objects in their caching server. Mattermost - Mattermost is an open source, self-hosted Slack alternative. It uses minio-go fully to handle S3 API requests. Pathio - Pathio is a version control system for Excel. It uses Minio as an on-premise storage backend for workbooks and json blobs. QuezX - QuezX is a recruitment aggregator for connecting employers to recruitment agencies. It uses Minio to store and manage CV's and other documents on their platform. Trustvox - Trustvox is an integrator of ecommerce platforms, ensures 100% valid product reviews, allowing only real buyers to post reviews along with a continuous audit process. The platform team chose Minio to create its own S3 service to avoid infrastructure vendor lock-in, obtaining transparent compatibility with Google Cloud Storage and previous Amazon S3 infrastructures. We tested other options before, and only Minio showed the stable and enterprise-grade results we were looking for. Rocket.Chat - Rocket.Chat is a completely FOSS alternative to Slack. In Rocket.Chat Minio can be used for file uploads \u2014 this applies to channels, groups and privately between one user and another. Content Management System \u00b6 Simple Simple Ads - uses Minio as a compatible object storage server replacement in our development environment. Multiple developers share a local repository of files transparently without having to change any site configuration. This makes developing with Drupal and the s3fs modules very easy. File changes are staged locally and then migrated to Amazon S3 after approval using the mc client utility. Application Development Services \u00b6 C0D1UM - C0D1UM is a software development firm doing projects on demand and offering operating system infrastructure support. We use minio to secure all confidential data in private network. It was a first choice because major functions are compatible with AWS S3 standard functions. Collaborne - Collaborne uses Minio docker containers in development environments to simulate a full AWS S3 environment. nxsol - nxsol specializes in the development of desktop and web-based businesses and personal applications. It uses minio-java client library for Amazon S3 related applications. ToolsLib - ToolsLib provides project management services including software hosting for millions of users. Minio fits perfectly in the current infrastructure: its ability to easily scale is a crucial point for ToolsLib services. Cloud Backup / Versioning \u00b6 Arq - Arq is a storage backend agnostic backup tool for Mac and Windows. Backend services include Amazon Cloud Drive, Google Drive, Dropbox, One Drive, Amazon S3 and more. It also supports 'Other S3-Compatible Services' which means that you can use Minio to build your own backend. BackupHive - Providing online backup services from The Netherlands with Minio as an S3 compatible back-end server to store and retrieve files. Minio is very scalable, uses almost no resources itself and is easy to maintain. The awesome team has a strong combined knowledge of use-cases, ranging from the smallest personal project to large scale cross-datacenter setups, all available within a comfortable community. burry - Burry, the BackUp & RecoveRY tool for cloud native infrastructure services enables to backup and restore ZooKeeper, etcd and Consul to and from local storage, Amazon S3, Azure Storage, Google Storage, Minio. CloudBerry Backup - CloudBerry Backup is used to store files, folders and system images to cloud storage providers. CloudBerry uses Minio for standalone, online and managed backup service. Duplicati - Duplicati is free, open source, backup software that implements full encryption, compression, and de-duplication that fully obscures backup contents from data hosting providers. It supports S3-compatible services, allowing Minio to server as the backend storage. pgBackRest - Reliable PostgreSQL Backup & Restore. Minio can provide repository storage for pgBackrest using the built-in S3 driver. rclone - \"rsync for cloud storage\". Rclone is a command line application to sync files to and from cloud storage systems and it works well with Minio. Check out rclone's s3 docs for more information. restic - restic is a backup program that is fast, efficient and secure. Check the documentation for instructions on how to backup to a Minio server using restic. s3git - git for cloud storage. s3git provides distributed version control for data. Create decentralized and versioned repos that scale infinitely to 100s of millions of files. Clone huge PB-scale repos on your local SSD to make changes, commit and push back. Check out s3git docs for more information. Cloud Storage Clients \u00b6 Cloud Explorer - Cloud Explorer is an open source client written in Java and runs on any OS. It has many unique features such as a a text editor, performance testor, image viewer, search, bucket migrations, music player, IRC client, and much more. Cyberduck - Cyberduck is an open source client for FTP and SFTP, WebDAV, OpenStack Swift, and Amazon S3, available on Mac OS X and Windows. It supports Minio as an AWS S3 compatible storage. Filestash ( demo ) - A Dropbox-like web client that supports Minio as one of the backends. Mountain Duck - Mountain Duck lets you mount a server and cloud storage as a local disk within the Finder app on Mac and the File Explorer app on Windows. It supports Minio as an AWS S3 compatible storage. Web Application Framework \u00b6 Django-Minio - Django is a popular Python web framework. Django-Minio plugin enables use of Minio as an AWS S3 replacement. Minio-Play-Rest-API - Rest API for Minio ( AWS S3 compatible object storage server ) based on Java Play Framework 2. Minio as Managed Service \u00b6 Apcera - Apcera offers a Minio service gateway to their users. Minio enables Apcera users to spin up a persistent, S3 compatible datastore on any infrastructure with just a single command. Minio provides an open source AWS S3 alternative for Apcera users. Compatible Hardware \u00b6 Cisco UCS C240 M4 Rack Server - Cisco 2U DP E5-2600v3 platform with 12x 3.5\u201d drive bays Intel\u00ae Server System R2312WTTYSR - Intel 2U DP E5-2600v3 platform with 12x 3.5\u201d drive bays Quanta Grid D51B-2U (OCP Compliant) - Quanta 2U DP E5-2600v3 platform with 12x 3.5\u201d drive bays SMC 5018A-AR12L (Intel Atom) - SMC 1U SoC Atom C2750 platform with 12x 3.5\u201d drive bays File Sharing \u00b6 Pydio Cells - Pydio Cells is an open source sync & share platform written in Go. Cells is using Minio as an object storage backend for serving files. It is also compatible with Amazon S3, Azure and other S3 storage providers. Check out Pydio Cells repository for more information and/or to contribute.","title":"Minio Guide"},{"location":"guides/minio-guilde.html#minio-guide","text":"","title":"Minio Guide"},{"location":"guides/minio-guilde.html#rclone-vs-minio","text":"https://www.libhunt.com/compare-minio-vs-rclone?ref=compare https://forum.rclone.org/t/recommendations-for-using-rclone-with-a-minio-10m-files/14472 https://golangrepo.com/tag/terraform-provider-minio_star_1 https://www.huuphan.com/2021/08/rclone-backup-all-vps-to-microsoft.html https://awstools.dev/ https://opensourcelibs.com/libs/s3 https://strobelstefan.org/2021/03/02/rclone-dateien-von-git-repository-automatisch-zu-nexcloud-uebertragen/","title":"Rclone vs Minio"},{"location":"guides/minio-guilde.html#awesome-minio","text":"from https://github.com/minio/awesome-minio A curated list of Minio community projects inspired by awesome-go. content A curated list of Minio community projects inspired by awesome-go .","title":"Awesome Minio"},{"location":"guides/minio-guilde.html#contribution-guidelines","text":"Add entries alphabetically, under the appropriate category. To add, remove, or change things on the list: Submit a pull request. Description should contain a link with the name of the package/project/website. Do not exceed more than a paragraph.","title":"Contribution Guidelines"},{"location":"guides/minio-guilde.html#cloud-paas","text":"Cloudron - Cloudron is a platform that makes it easy to run web apps on your server and keep them up-to-date. Cloudron supports storing it's backups on Minio, you can read more here . Minio itself has been packaged as a Cloudron App - you can try it in the demo (username: cloudron password: cloudron) Minio on Cloudron App Store - Package Source . Hephy Workflow (formerly known as Deis Workflow) - an open source Platform-as-a-Service for Kubernetes . Workflow uses Minio by default to store all internal application metadata and database backups. Jelastic - Jelastic is a multi-cloud PaaS and CaaS for business. It uses Minio as an S3 compatible object storage server in Docker containers. minio-dist-boshrelease - Cloud Foundry BOSH is an open source tool chain for release engineering, deployment and lifecycle management of large scale distributed services. minio-dist-boshrelease will help easily install the distributed version of Minio . minio-dokku - Dockerfile to run Minio on Dokku PaaS. Rafter - Kubernetes-native files/assets store powered by MinIO. It extends Kubernetes with Custom Resource Definitions like AssetGroup, Asset and Bucket. It supports webhook approach that you can modify/validate/analyze a file asynchronously before it is being saved into MinIO. sloppy.io - sloppy.io is the fastest way to deploy your docker container online. We provide the infrastructure and workflow to run container applications and micro services. Access our platform over the web, via CLI or our own API. Check out Deploying Minio to sloppy.io for further info! Univention Corporate Server - Univention Corporate Server (UCS) is the innovative basis for the cost-efficient operation and easy administration of server applications and entire IT infrastructures. The integrated App Center offers a multitude of enterprise solutions, which can be run or operated virtually with just a few clicks. Minio has been packages as an app for Univention - you can try it from the Univention App Center - Source .","title":"Cloud - PaaS"},{"location":"guides/minio-guilde.html#cloud-iaas","text":"Digital Ocean - Deploy an SSD cloud server in 55 seconds. Eucalyptus - Eucalyptus is an open solution to build private and hybrid clouds that are compatible with Amazon Web Services. Minio can be used as an object storage backend for Eucalyptus. Ha-Minio - Configures Minio, as a S3 compatible cloud storage server for DigitalOcean in a highly available fashion. Onlinetech - Secure, compliant enterprise cloud. OVH - Build your own infrastructure with OVH public cloud.. Packet - Packet is a baremetal cloud provider. Plumbery - Plumbery is an open source project that was initiated by Dimension Data to accelerate digital transformation. It recommends using Minio as a standalone object storage. s3-tus-store - Minio is the supported storage backend for https://tus.io/ . Tus is an open protocol for resumable file uploads. ScaleWay - Scalable and affordable cloud and bare-metal servers (European DC). SSD Nodes - Simple, high performance cloud provider with truly personalized support.","title":"Cloud - IaaS"},{"location":"guides/minio-guilde.html#devops-cicd","text":"drone.io - drone.io is continuous integration for Github and Bitbucket, that monitors your code for bugs. It uses Minio as an AWS S3 cloud storage alternative. Gorbachev IO - Gorbachev is a continuous integration platform, used to manage reproducible research at Dragonfly Data Science. Minio tools are awesome, and the community is supportive and responsive. mkrepo - maintains an RPM or DEB repository in S3, and periodically regenerates metadata. You can use Minio as a convenient and inexpensive storage for your CI. s3-resource-simple - s3-resource-simple is Concourse CI's resource for uploading files to S3. It supports Minio as an object storage backend. puppet-minio - Puppet module to manage Minio installations. Uses the binary, does not (yet) support Docker based installation. (Requires Puppet version 4+)","title":"DevOps - CI/CD"},{"location":"guides/minio-guilde.html#cloudsaas-applications","text":"Appknox - Appknox detects & addresses vulnerabilities in mobile apps within minutes. Managing storage was a nightmare for us before Minio came along. We use Minio to store all our ipa/apk files and pdf reports that gets auto-nenerated. We are an enterprise startup and we offer on-premise and private-cloud installations of our cloud-based scanner. We have deployed our code base on AWS, Google, Azure, multiple on-premise installations and private cloud. Before Mino came along - we had to write and maintain Python libraries for each platform and maintain them. Some of the changes that we make cannot be even tested - because it is deployed on-premise which we dont have access to. Thankfully, we came across Minio. Now we just install minio everywhere and forget about storage. Minio Rocks! Blockai - Blockai helps artists claim their copyrights and protects them, for free. It uses Minio for all internal development and testing as an AWS S3 compatible object storage service. Cosmic App - Cosmic App uses Minio for storing client files and quote information for commercial brokers. Files are packaged up for lenders including high street banks to access securely. Crisp - Crisp is a Customer Intelligence Platform. It helps teams know, understand and communicate with their customers, from multiple channels (chat, email). Minio is used to securely store user file uploads. Files are uploaded from the chatbox, operator dashboard and email attachments. Minio completely replaces S3 and brings more control to user data safety. dapploy - dapploy is a solution to create private app stores to deploy iOS and Android applications to your team, company or organization. Minio is easily integrated with dapploy's architecture and docker environment. Minio is used to store application packages - ipas, apks, icons and images. Minio's great feature among others is the ability to have presigned urls while downloading resources. We use that a lot. Thanks for your good documentation and community. DBHub.io - Online storage, visualisation, and collaboration for SQLite databases. Minio is the primary object store for the SQLite databases. GitLab - GitLab is an open source software to collaborate on code. It uses Minio to store objects in their caching server. Mattermost - Mattermost is an open source, self-hosted Slack alternative. It uses minio-go fully to handle S3 API requests. Pathio - Pathio is a version control system for Excel. It uses Minio as an on-premise storage backend for workbooks and json blobs. QuezX - QuezX is a recruitment aggregator for connecting employers to recruitment agencies. It uses Minio to store and manage CV's and other documents on their platform. Trustvox - Trustvox is an integrator of ecommerce platforms, ensures 100% valid product reviews, allowing only real buyers to post reviews along with a continuous audit process. The platform team chose Minio to create its own S3 service to avoid infrastructure vendor lock-in, obtaining transparent compatibility with Google Cloud Storage and previous Amazon S3 infrastructures. We tested other options before, and only Minio showed the stable and enterprise-grade results we were looking for. Rocket.Chat - Rocket.Chat is a completely FOSS alternative to Slack. In Rocket.Chat Minio can be used for file uploads \u2014 this applies to channels, groups and privately between one user and another.","title":"Cloud/SaaS Applications"},{"location":"guides/minio-guilde.html#content-management-system","text":"Simple Simple Ads - uses Minio as a compatible object storage server replacement in our development environment. Multiple developers share a local repository of files transparently without having to change any site configuration. This makes developing with Drupal and the s3fs modules very easy. File changes are staged locally and then migrated to Amazon S3 after approval using the mc client utility.","title":"Content Management System"},{"location":"guides/minio-guilde.html#application-development-services","text":"C0D1UM - C0D1UM is a software development firm doing projects on demand and offering operating system infrastructure support. We use minio to secure all confidential data in private network. It was a first choice because major functions are compatible with AWS S3 standard functions. Collaborne - Collaborne uses Minio docker containers in development environments to simulate a full AWS S3 environment. nxsol - nxsol specializes in the development of desktop and web-based businesses and personal applications. It uses minio-java client library for Amazon S3 related applications. ToolsLib - ToolsLib provides project management services including software hosting for millions of users. Minio fits perfectly in the current infrastructure: its ability to easily scale is a crucial point for ToolsLib services.","title":"Application Development Services"},{"location":"guides/minio-guilde.html#cloud-backup-versioning","text":"Arq - Arq is a storage backend agnostic backup tool for Mac and Windows. Backend services include Amazon Cloud Drive, Google Drive, Dropbox, One Drive, Amazon S3 and more. It also supports 'Other S3-Compatible Services' which means that you can use Minio to build your own backend. BackupHive - Providing online backup services from The Netherlands with Minio as an S3 compatible back-end server to store and retrieve files. Minio is very scalable, uses almost no resources itself and is easy to maintain. The awesome team has a strong combined knowledge of use-cases, ranging from the smallest personal project to large scale cross-datacenter setups, all available within a comfortable community. burry - Burry, the BackUp & RecoveRY tool for cloud native infrastructure services enables to backup and restore ZooKeeper, etcd and Consul to and from local storage, Amazon S3, Azure Storage, Google Storage, Minio. CloudBerry Backup - CloudBerry Backup is used to store files, folders and system images to cloud storage providers. CloudBerry uses Minio for standalone, online and managed backup service. Duplicati - Duplicati is free, open source, backup software that implements full encryption, compression, and de-duplication that fully obscures backup contents from data hosting providers. It supports S3-compatible services, allowing Minio to server as the backend storage. pgBackRest - Reliable PostgreSQL Backup & Restore. Minio can provide repository storage for pgBackrest using the built-in S3 driver. rclone - \"rsync for cloud storage\". Rclone is a command line application to sync files to and from cloud storage systems and it works well with Minio. Check out rclone's s3 docs for more information. restic - restic is a backup program that is fast, efficient and secure. Check the documentation for instructions on how to backup to a Minio server using restic. s3git - git for cloud storage. s3git provides distributed version control for data. Create decentralized and versioned repos that scale infinitely to 100s of millions of files. Clone huge PB-scale repos on your local SSD to make changes, commit and push back. Check out s3git docs for more information.","title":"Cloud Backup / Versioning"},{"location":"guides/minio-guilde.html#cloud-storage-clients","text":"Cloud Explorer - Cloud Explorer is an open source client written in Java and runs on any OS. It has many unique features such as a a text editor, performance testor, image viewer, search, bucket migrations, music player, IRC client, and much more. Cyberduck - Cyberduck is an open source client for FTP and SFTP, WebDAV, OpenStack Swift, and Amazon S3, available on Mac OS X and Windows. It supports Minio as an AWS S3 compatible storage. Filestash ( demo ) - A Dropbox-like web client that supports Minio as one of the backends. Mountain Duck - Mountain Duck lets you mount a server and cloud storage as a local disk within the Finder app on Mac and the File Explorer app on Windows. It supports Minio as an AWS S3 compatible storage.","title":"Cloud Storage Clients"},{"location":"guides/minio-guilde.html#web-application-framework","text":"Django-Minio - Django is a popular Python web framework. Django-Minio plugin enables use of Minio as an AWS S3 replacement. Minio-Play-Rest-API - Rest API for Minio ( AWS S3 compatible object storage server ) based on Java Play Framework 2.","title":"Web Application Framework"},{"location":"guides/minio-guilde.html#minio-as-managed-service","text":"Apcera - Apcera offers a Minio service gateway to their users. Minio enables Apcera users to spin up a persistent, S3 compatible datastore on any infrastructure with just a single command. Minio provides an open source AWS S3 alternative for Apcera users.","title":"Minio as Managed Service"},{"location":"guides/minio-guilde.html#compatible-hardware","text":"Cisco UCS C240 M4 Rack Server - Cisco 2U DP E5-2600v3 platform with 12x 3.5\u201d drive bays Intel\u00ae Server System R2312WTTYSR - Intel 2U DP E5-2600v3 platform with 12x 3.5\u201d drive bays Quanta Grid D51B-2U (OCP Compliant) - Quanta 2U DP E5-2600v3 platform with 12x 3.5\u201d drive bays SMC 5018A-AR12L (Intel Atom) - SMC 1U SoC Atom C2750 platform with 12x 3.5\u201d drive bays","title":"Compatible Hardware"},{"location":"guides/minio-guilde.html#file-sharing","text":"Pydio Cells - Pydio Cells is an open source sync & share platform written in Go. Cells is using Minio as an object storage backend for serving files. It is also compatible with Amazon S3, Azure and other S3 storage providers. Check out Pydio Cells repository for more information and/or to contribute.","title":"File Sharing"},{"location":"guides/mkdocs-guide.html","text":"Mkdocs Guide \u00b6 Minimal Start \u00b6 Test Admonitions \u00b6 mkdocs-guide content Test Mermaid Graph \u00b6 graph LR A --> B Test Tabbed Content \u00b6 TAB 1 list with items TAB B some par","title":"Mkdocs Guide"},{"location":"guides/mkdocs-guide.html#mkdocs-guide","text":"","title":"Mkdocs Guide"},{"location":"guides/mkdocs-guide.html#minimal-start","text":"","title":"Minimal Start"},{"location":"guides/mkdocs-guide.html#test-admonitions","text":"mkdocs-guide content","title":"Test Admonitions"},{"location":"guides/mkdocs-guide.html#test-mermaid-graph","text":"graph LR A --> B","title":"Test Mermaid Graph"},{"location":"guides/mkdocs-guide.html#test-tabbed-content","text":"TAB 1 list with items TAB B some par","title":"Test Tabbed Content"},{"location":"guides/python-blogs.html","text":"Python Blogs and REsources \u00b6 https://tryexceptpass.org/","title":"Python Blogs and REsources"},{"location":"guides/python-blogs.html#python-blogs-and-resources","text":"https://tryexceptpass.org/","title":"Python Blogs and REsources"},{"location":"guides/python-compile.html","text":"Python Compilation / Packing \u00b6 We apprcieate simple drop-in no-deps executables, which are genereated by go compiler. But some of us still don't know go, and more important there are a lot of software written in python. So we are looking for ways to pack/compile python program to single drop-in exe (or at least exe ad resource dir) Compilers Overview \u00b6 Nuitka PyInstaller mypyc cython Nuitka \u00b6 Nuitka Compile to exe on win https://github.com/Nuitka/NUITKA-Utilities/issues/62 https://github.com/Nuitka/NUITKA-Utilities/tree/master/hinted-compilation Cython \u00b6 4 Attempts at Packaging Python as an Executable PyInstaller \u00b6 https://github.com/pyinstaller/pyinstaller/blob/develop/PyInstaller/hooks/hook-pandas.py","title":"Python Compilation / Packing"},{"location":"guides/python-compile.html#python-compilation-packing","text":"We apprcieate simple drop-in no-deps executables, which are genereated by go compiler. But some of us still don't know go, and more important there are a lot of software written in python. So we are looking for ways to pack/compile python program to single drop-in exe (or at least exe ad resource dir)","title":"Python Compilation / Packing"},{"location":"guides/python-compile.html#compilers-overview","text":"Nuitka PyInstaller mypyc cython","title":"Compilers Overview"},{"location":"guides/python-compile.html#nuitka","text":"Nuitka Compile to exe on win https://github.com/Nuitka/NUITKA-Utilities/issues/62 https://github.com/Nuitka/NUITKA-Utilities/tree/master/hinted-compilation","title":"Nuitka"},{"location":"guides/python-compile.html#cython","text":"4 Attempts at Packaging Python as an Executable","title":"Cython"},{"location":"guides/python-compile.html#pyinstaller","text":"https://github.com/pyinstaller/pyinstaller/blob/develop/PyInstaller/hooks/hook-pandas.py","title":"PyInstaller"},{"location":"guides/shell-guide.html","text":"Shell Guide \u00b6 Amazing Shell Tips \u00b6 https://www.shell-tips.com/bash/loops/ Interactive Shell \u00b6 https://www.baeldung.com/linux/bash-interactive-prompts oh my zsh \u00b6 zsh:oh-my-zsh:plugins docker-compose Zsh Completions \u00b6 https://scriptingosx.com/2019/07/moving-to-zsh-part-5-completions/ https://zsh.sourceforge.io/Doc/Release/Completion-System.html Bash Script Parts \u00b6 Following next naming convention Info layout : |- ### TOPIC. CHAPTER_NUM__NO_ZEROS. CHAPTER_NAME terms : TOPIC : name id of series. here='Bash Script Parts' CHAPTER_NUM__NO_ZEROS : |- desc: chapter number in order of entry in script or complexity no zeros: to elimitate zero interpretation issues no zeros allowed CHAPTER_NAME : name of the chapter sample='Shebang Line' Bash Script. P11. Shebang Line \u00b6 How does /usr/bin/env work in a Linux shebang line? !!! question What is shebang > First line in bash / sh scripts usually looks like ```bash #!/usr/bin/env python3 ``` !!! question How does /usr/bin/env work in a Linux shebang line? > `_origin_link_` [stack-overflow-question](https://stackoverflow.com/questions/43793040/how-does-usr-bin-env-work-in-a-linux-shebang-line) `env` is the name of a Unix program. If you read the manual (`man env`) you can see that one way to use it is `env COMMAND`, where in your case, `COMMAND` is `python3`. According to the manual, this will > Set each `NAME` to `VALUE` in the environment and run `COMMAND`. Running env alone will show you what NAMEs and VALUEs are set: ```sh $ env TERM=xterm-256color SHELL=/bin/bash PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin ``` Therefore, `/usr/bin/env python3` is an instruction to set the `PATH` (as well as all the other `NAME+VALUE` pairs), and then run `python3`, using the first directory in the `PATH` that contains the `python3` executable. !!! tip Reference - How to use the /usr/bin/env command in a shell script - Why is it better to use \"#!/usr/bin/env NAME\" instead of \"#!/path/to/NAME\" as my shebang? Sdf sdf sdf sdf","title":"Shell Guide"},{"location":"guides/shell-guide.html#shell-guide","text":"","title":"Shell Guide"},{"location":"guides/shell-guide.html#amazing-shell-tips","text":"https://www.shell-tips.com/bash/loops/","title":"Amazing Shell Tips"},{"location":"guides/shell-guide.html#interactive-shell","text":"https://www.baeldung.com/linux/bash-interactive-prompts","title":"Interactive Shell"},{"location":"guides/shell-guide.html#oh-my-zsh","text":"zsh:oh-my-zsh:plugins docker-compose","title":"oh my zsh"},{"location":"guides/shell-guide.html#zsh-completions","text":"https://scriptingosx.com/2019/07/moving-to-zsh-part-5-completions/ https://zsh.sourceforge.io/Doc/Release/Completion-System.html","title":"Zsh Completions"},{"location":"guides/shell-guide.html#bash-script-parts","text":"Following next naming convention Info layout : |- ### TOPIC. CHAPTER_NUM__NO_ZEROS. CHAPTER_NAME terms : TOPIC : name id of series. here='Bash Script Parts' CHAPTER_NUM__NO_ZEROS : |- desc: chapter number in order of entry in script or complexity no zeros: to elimitate zero interpretation issues no zeros allowed CHAPTER_NAME : name of the chapter sample='Shebang Line'","title":"Bash Script Parts"},{"location":"guides/shell-guide.html#bash-script-p11-shebang-line","text":"How does /usr/bin/env work in a Linux shebang line? !!! question What is shebang > First line in bash / sh scripts usually looks like ```bash #!/usr/bin/env python3 ``` !!! question How does /usr/bin/env work in a Linux shebang line? > `_origin_link_` [stack-overflow-question](https://stackoverflow.com/questions/43793040/how-does-usr-bin-env-work-in-a-linux-shebang-line) `env` is the name of a Unix program. If you read the manual (`man env`) you can see that one way to use it is `env COMMAND`, where in your case, `COMMAND` is `python3`. According to the manual, this will > Set each `NAME` to `VALUE` in the environment and run `COMMAND`. Running env alone will show you what NAMEs and VALUEs are set: ```sh $ env TERM=xterm-256color SHELL=/bin/bash PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin ``` Therefore, `/usr/bin/env python3` is an instruction to set the `PATH` (as well as all the other `NAME+VALUE` pairs), and then run `python3`, using the first directory in the `PATH` that contains the `python3` executable. !!! tip Reference - How to use the /usr/bin/env command in a shell script - Why is it better to use \"#!/usr/bin/env NAME\" instead of \"#!/path/to/NAME\" as my shebang? Sdf sdf sdf sdf","title":"Bash Script. P11. Shebang Line"},{"location":"guides/taskgo-guide.html","text":"Taskgo guide \u00b6 https://conemu.github.io/en/wsl.html#start https://dev.to/stack-labs/introduction-to-taskfile-a-makefile-alternative-h92","title":"Taskgo guide"},{"location":"guides/taskgo-guide.html#taskgo-guide","text":"https://conemu.github.io/en/wsl.html#start https://dev.to/stack-labs/introduction-to-taskfile-a-makefile-alternative-h92","title":"Taskgo guide"},{"location":"guides/vault-guide.html","text":"Vault Guide \u00b6 Vault is security/auth block. That ca be use for local and cloud authentication Examples \u00b6 [TBD] Reference \u00b6 How To Use Hashicorp Vault And Argo Cd For Gitops On openshift Terraform Google Vault Gitops With Argocd And Hashicorp Vault On Kubernetes/ ArgoCD and Vault on Red Hat https://github.com/Thierry61/safe_vault_local_network https://github.com/sk3pp3r/cheat-sheet-pdf Video \u00b6 https://www.youtube.com/watch?v=7aR6k9xBN94&list=PL7bmigfV0EqQzxcNpmcdTJ9eFRPBe-iZa&index=42 https://www.suse.com/c/rancher_blog/implementing-gitops-on-kubernetes-using-k3s-rancher-vault-and-argo-cd/?hss_channel=lcp-4819449","title":"Vault Guide"},{"location":"guides/vault-guide.html#vault-guide","text":"Vault is security/auth block. That ca be use for local and cloud authentication","title":"Vault Guide"},{"location":"guides/vault-guide.html#examples","text":"[TBD]","title":"Examples"},{"location":"guides/vault-guide.html#reference","text":"How To Use Hashicorp Vault And Argo Cd For Gitops On openshift Terraform Google Vault Gitops With Argocd And Hashicorp Vault On Kubernetes/ ArgoCD and Vault on Red Hat https://github.com/Thierry61/safe_vault_local_network https://github.com/sk3pp3r/cheat-sheet-pdf","title":"Reference"},{"location":"guides/vault-guide.html#video","text":"https://www.youtube.com/watch?v=7aR6k9xBN94&list=PL7bmigfV0EqQzxcNpmcdTJ9eFRPBe-iZa&index=42 https://www.suse.com/c/rancher_blog/implementing-gitops-on-kubernetes-using-k3s-rancher-vault-and-argo-cd/?hss_channel=lcp-4819449","title":"Video"},{"location":"guides/vscode-extentions.html","text":"VSCode Extentions Guide \u00b6 Devloper Guide \u00b6 inspired by How to Build a VS Code extension for Markdown preview using Remark processor Author : Subrat Thakur (subrat.thakur@salesforce.com) LinkedIn : https://www.linkedin.com/in/subrat-thakur/ Public Extentions \u00b6 Markdown \u00b6 Markdown Tab Complete Vs Code ```javascript I'm A tab console.log('Code Tab A'); ```javascript I'm tab B console.log('Code Tab B'); https://www.appveyor.com/docs/appveyor-yml/","title":"VSCode Extentions Guide"},{"location":"guides/vscode-extentions.html#vscode-extentions-guide","text":"","title":"VSCode Extentions Guide"},{"location":"guides/vscode-extentions.html#devloper-guide","text":"inspired by How to Build a VS Code extension for Markdown preview using Remark processor Author : Subrat Thakur (subrat.thakur@salesforce.com) LinkedIn : https://www.linkedin.com/in/subrat-thakur/","title":"Devloper Guide"},{"location":"guides/vscode-extentions.html#public-extentions","text":"","title":"Public Extentions"},{"location":"guides/vscode-extentions.html#markdown","text":"Markdown Tab Complete Vs Code ```javascript I'm A tab console.log('Code Tab A'); ```javascript I'm tab B console.log('Code Tab B'); https://www.appveyor.com/docs/appveyor-yml/","title":"Markdown"},{"location":"guides/yaml-guide.html","text":"Yaml Guide \u00b6 Please check https://yt-project.org/ https://yt-project.org/ Templating Options \u00b6 ytt tool docs ytt tool tut-101 Executors \u00b6 taskgo","title":"Yaml Guide"},{"location":"guides/yaml-guide.html#yaml-guide","text":"Please check https://yt-project.org/ https://yt-project.org/","title":"Yaml Guide"},{"location":"guides/yaml-guide.html#templating-options","text":"ytt tool docs ytt tool tut-101","title":"Templating Options"},{"location":"guides/yaml-guide.html#executors","text":"taskgo","title":"Executors"}]}