{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"About Jenlib \u00b6 Jenlib is a bridge to top-level automation Content \u00b6 Get Started With Local Development # minimalistic run with ui docker run -d -p 8080:8080 yairdar/jenconda:0.8.4-1633116582 docker run -d yairdar/jenconda:0.8.4-1633116582 Links \u00b6 see more live see more stale Layout \u00b6 src - jenkins shared lib 'jenlib' jenpy (jenlib) - python cli for jenkins, jenlib, gitlab, s3/http access Command Groups \u00b6 This repo is multi product repo Each product have it's own taskfile Taskfiles are copied to tasks dir from different ci-libs Each taskfile express one group Available Groups jenlib - jenkins shared lib tasks jenconda - jenkins with conda docker build mkdocs - documentation deps - dependancy resolution More Distributions \u00b6 https://github.com/odavid/my-bloody-jenkins https://hub.docker.com/r/eeacms/jenkins-slave https://github.com/ydtools/eea.docker.jenkins.slave-dind https://github.com/arminc/clair-scanner Security \u00b6 https://github.com/arminc/clair-scanner","title":"About Jenlib"},{"location":"index.html#about-jenlib","text":"Jenlib is a bridge to top-level automation","title":"About Jenlib"},{"location":"index.html#content","text":"Get Started With Local Development # minimalistic run with ui docker run -d -p 8080:8080 yairdar/jenconda:0.8.4-1633116582 docker run -d yairdar/jenconda:0.8.4-1633116582","title":"Content"},{"location":"index.html#links","text":"see more live see more stale","title":"Links"},{"location":"index.html#layout","text":"src - jenkins shared lib 'jenlib' jenpy (jenlib) - python cli for jenkins, jenlib, gitlab, s3/http access","title":"Layout"},{"location":"index.html#command-groups","text":"This repo is multi product repo Each product have it's own taskfile Taskfiles are copied to tasks dir from different ci-libs Each taskfile express one group Available Groups jenlib - jenkins shared lib tasks jenconda - jenkins with conda docker build mkdocs - documentation deps - dependancy resolution","title":"Command Groups"},{"location":"index.html#more-distributions","text":"https://github.com/odavid/my-bloody-jenkins https://hub.docker.com/r/eeacms/jenkins-slave https://github.com/ydtools/eea.docker.jenkins.slave-dind https://github.com/arminc/clair-scanner","title":"More Distributions"},{"location":"index.html#security","text":"https://github.com/arminc/clair-scanner","title":"Security"},{"location":"changelog.html","text":"Changelog \u00b6 jenlib-v0.8.5-2021.10.2rc2 \u00b6 implement self build on slave dnd implenet [] 0.8.4-1633187061 jenlib-v0.8.4-2021.09.29rc1 \u00b6 introduce e2etests deck install base tools in task add jcasc init tools ci-flow passed on e2e-tests-local remote dockers dir. keep only decks ci-flow is ok task-samples init with reposet implement test by diff with multiple read approachs ready with reposet things configured reposet with text-yaml-in-yaml support make a jenlib-runner work new ci flow with fast jenlib checks fix jobs creator use _cicd/build.pipe.groovy smart ci-flow more -o prefixed for nice history ready to go fix default window new version 0.8.4 Jenlib changelog jenlib-v0.8.3-2021.09.27rc0 \u00b6 push images to dockerhub self ci-cd jenlib-v0.8.1-2021.09.rc0 \u00b6 add changelog instead of release_notes add tutorial docker-compose add documentation builders creted dev decks jenlib-0.5.1-rc.20202312.rc \u00b6 adopt git project version dir approach jenlib-0.4.3-rc.20190101.rc \u00b6 introduce parallel deps","title":"Changelog"},{"location":"changelog.html#changelog","text":"","title":"Changelog"},{"location":"changelog.html#jenlib-v085-2021102rc2","text":"implement self build on slave dnd implenet [] 0.8.4-1633187061","title":"jenlib-v0.8.5-2021.10.2rc2"},{"location":"changelog.html#jenlib-v084-20210929rc1","text":"introduce e2etests deck install base tools in task add jcasc init tools ci-flow passed on e2e-tests-local remote dockers dir. keep only decks ci-flow is ok task-samples init with reposet implement test by diff with multiple read approachs ready with reposet things configured reposet with text-yaml-in-yaml support make a jenlib-runner work new ci flow with fast jenlib checks fix jobs creator use _cicd/build.pipe.groovy smart ci-flow more -o prefixed for nice history ready to go fix default window new version 0.8.4 Jenlib changelog","title":"jenlib-v0.8.4-2021.09.29rc1"},{"location":"changelog.html#jenlib-v083-20210927rc0","text":"push images to dockerhub self ci-cd","title":"jenlib-v0.8.3-2021.09.27rc0"},{"location":"changelog.html#jenlib-v081-202109rc0","text":"add changelog instead of release_notes add tutorial docker-compose add documentation builders creted dev decks","title":"jenlib-v0.8.1-2021.09.rc0"},{"location":"changelog.html#jenlib-051-rc20202312rc","text":"adopt git project version dir approach","title":"jenlib-0.5.1-rc.20202312.rc"},{"location":"changelog.html#jenlib-043-rc20190101rc","text":"introduce parallel deps","title":"jenlib-0.4.3-rc.20190101.rc"},{"location":"docs_examples.html","text":"some doc examples \u00b6 https://github.com/argoproj/argo-workflows/blob/master/Makefile ``` kubectl create rolebinding default-admin --clusterrole=admin --serviceaccount=default:default","title":"some doc examples"},{"location":"docs_examples.html#some-doc-examples","text":"https://github.com/argoproj/argo-workflows/blob/master/Makefile ``` kubectl create rolebinding default-admin --clusterrole=admin --serviceaccount=default:default","title":"some doc examples"},{"location":"get-started.html","text":"Get Started \u00b6 Build And Test \u00b6 # clone this repo from github git clone https://github.com/ydzvulon/jenlib.git # set working dir to jenlib cd jenlib # build Jenkins Docker Image task -d decks/jenconda-dimg docker:build # run build and tests task ci-flow","title":"Get Started"},{"location":"get-started.html#get-started","text":"","title":"Get Started"},{"location":"get-started.html#build-and-test","text":"# clone this repo from github git clone https://github.com/ydzvulon/jenlib.git # set working dir to jenlib cd jenlib # build Jenkins Docker Image task -d decks/jenconda-dimg docker:build # run build and tests task ci-flow","title":"Build And Test"},{"location":"limitations.html","text":"Limitations \u00b6 Not all taskfiles suported by jenlib Restrictions \u00b6 ci-flow supported: clean task call task TASK_NAME task: TASK_NAME unsupported: no variable are allowed task TASK_NAME VAR=val task: TASK_NAME, vars: VAR:val","title":"Limitations"},{"location":"limitations.html#limitations","text":"Not all taskfiles suported by jenlib","title":"Limitations"},{"location":"limitations.html#restrictions","text":"ci-flow supported: clean task call task TASK_NAME task: TASK_NAME unsupported: no variable are allowed task TASK_NAME VAR=val task: TASK_NAME, vars: VAR:val","title":"Restrictions"},{"location":"products-deps.html","text":"Product Dependancies \u00b6 Diagram \u00b6 flowchart LR jenlib.tests --> jencoda","title":"Product Dependancies"},{"location":"products-deps.html#product-dependancies","text":"","title":"Product Dependancies"},{"location":"products-deps.html#diagram","text":"flowchart LR jenlib.tests --> jencoda","title":"Diagram"},{"location":"_tickets/2021.09.27.push-images-to-dockerhub.html","text":"","title":"2021.09.27.push images to dockerhub"},{"location":"_tickets/2021.09.28.reposet-and-jenlib.html","text":"Create a demo for current abilities \u00b6 Create Ci conf repo use reposet to create interconnections","title":"Create a demo for current abilities"},{"location":"_tickets/2021.09.28.reposet-and-jenlib.html#create-a-demo-for-current-abilities","text":"Create Ci conf repo use reposet to create interconnections","title":"Create a demo for current abilities"},{"location":"contibute/dev.html","text":"Dev Information \u00b6 Misc \u00b6 Shared libs \u00b6 < https://vzurczak.wordpress.com/2020/04/17/combining-jenkins-job-dsl-and-shared-libraries-for-docker-images-p docs \u00b6","title":"Dev Information"},{"location":"contibute/dev.html#dev-information","text":"","title":"Dev Information"},{"location":"contibute/dev.html#misc","text":"","title":"Misc"},{"location":"contibute/dev.html#shared-libs","text":"< https://vzurczak.wordpress.com/2020/04/17/combining-jenkins-job-dsl-and-shared-libraries-for-docker-images-p","title":"Shared libs"},{"location":"contibute/dev.html#docs","text":"","title":"docs"},{"location":"contibute/groovy.html","text":"Groovy Essentials \u00b6 Basic \u00b6 Variables \u00b6 Methods \u00b6 Difference from Python \u00b6 kwargs and args \u00b6 method call \u00b6 Imports and Dymanic loading \u00b6 Load Class (import) from custom groovy file \u00b6 url_from= https://stackoverflow.com/questions/9136328/including-a-groovy-script-in-another-groovy File sourceFile = new File ( \"/full/path/to/./src/org/jenslib/jentools.groovy\" ); Class groovyClass = new GroovyClassLoader ( getClass (). getClassLoader ()). parseClass ( sourceFile ); GroovyObject myObject = ( GroovyObject ) groovyClass . newInstance (); Evaluate code ad-hoc \u00b6 Evaluate text url_from= http://www.groovy-lang.org/metaprogramming.html#_dynamic_method_names // evaluate implicitly creates a class based on the filename specified evaluate ( new File ( \"./Testutils.groovy\" )) // Safer to use 'def' here as Groovy seems fussy about whether the filename (and therefore implicit class name) has a capital first letter def tu = new Testutils () tu . myUtilityMethod ( \"hello world\" )","title":"Groovy Essentials"},{"location":"contibute/groovy.html#groovy-essentials","text":"","title":"Groovy Essentials"},{"location":"contibute/groovy.html#basic","text":"","title":"Basic"},{"location":"contibute/groovy.html#variables","text":"","title":"Variables"},{"location":"contibute/groovy.html#methods","text":"","title":"Methods"},{"location":"contibute/groovy.html#difference-from-python","text":"","title":"Difference from Python"},{"location":"contibute/groovy.html#kwargs-and-args","text":"","title":"kwargs and args"},{"location":"contibute/groovy.html#method-call","text":"","title":"method call"},{"location":"contibute/groovy.html#imports-and-dymanic-loading","text":"","title":"Imports and Dymanic loading"},{"location":"contibute/groovy.html#load-class-import-from-custom-groovy-file","text":"url_from= https://stackoverflow.com/questions/9136328/including-a-groovy-script-in-another-groovy File sourceFile = new File ( \"/full/path/to/./src/org/jenslib/jentools.groovy\" ); Class groovyClass = new GroovyClassLoader ( getClass (). getClassLoader ()). parseClass ( sourceFile ); GroovyObject myObject = ( GroovyObject ) groovyClass . newInstance ();","title":"Load Class (import) from custom groovy file"},{"location":"contibute/groovy.html#evaluate-code-ad-hoc","text":"Evaluate text url_from= http://www.groovy-lang.org/metaprogramming.html#_dynamic_method_names // evaluate implicitly creates a class based on the filename specified evaluate ( new File ( \"./Testutils.groovy\" )) // Safer to use 'def' here as Groovy seems fussy about whether the filename (and therefore implicit class name) has a capital first letter def tu = new Testutils () tu . myUtilityMethod ( \"hello world\" )","title":"Evaluate code ad-hoc"},{"location":"contibute/links.html","text":"Links To Read \u00b6 Checkout to Local Branch MBP setup predefined token for user https://vianneyfaivre.com/tech/jenkins-pipelines-how-to-load-groovy-classes-dynamically-copy Multibranch jdsl \u00b6 JobDSL example for setting up master / release branch builds + PR builds via bitbucket-branch-source-plugin (using the generated JobDSL) MultibranchPipelineJobBuilder https://community.atlassian.com/t5/Marketplace-Apps-Integrations/Groovy-script-to-run-Jenkins-Job-DSL-to-retrieve-all/qaq-p/825422 https://gist.github.com/jondkelley/fc7812158d98003ea504365a6195d59a https://github.com/chit787/jenkins-jobs/blob/9bacd25e1b723ef7f350b2ac8b70be465067118d/jobs/test1/cypress.groovy https://github.com/sumeetraheja/seed-jobs/blob/5698c6f1a3d66586d3454355126bc84a43fcfb64/jobs/checkout/checkout_backend_api_tests_job.groovy VS Code \u00b6 https://github.com/cmderdev/cmder/wiki/Seamless-VS-Code-Integration https://winsmarts.com/using-cmder-as-integrated-shell-in-vscode-c3340714fe3c https://viatsko.github.io/awesome-vscode/ Translators \u00b6 https://coderoad.ru/51140392/Jenkins-%D0%B7%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-dsl-%D0%B4%D0%BB%D1%8F-bitbucket-%D1%84%D0%B8%D0%BB%D0%B8%D0%B0%D0%BB%D0%B0-%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F-%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD%D0%B0-%D1%81 https://groups.google.com/forum/#!topic/job-dsl-plugin/IVu1oBjqJao Jenkins Plugins \u00b6 https://plugins.jenkins.io/extended-choice-parameter/ https://jenkinsci.github.io/job-dsl-plugin/#method/javaposse.jobdsl.dsl.helpers.BuildParametersContext.gitParam Jenlib. Jenkins Automation Library \u00b6 Jenlib is Shared Basic Usage: see README.md Job DSL \u00b6 https://github.com/Ticketfly/jenkins-docker-examples https://www.praqma.com/stories/dockerized-jenkins-jobdsl/ https://github.com/thomasleveil/docker-jenkins-dsl-ready https://github.com/jenkinsci/job-dsl-plugin/wiki/User-Power-Moves#run-a-dsl-script-locally https://www.jenkins.io/blog/2019/08/23/introducing-gitlab-branch-source-plugin/ https://gist.github.com/baymac/f1a2249a0ec7b999c057056937e752a6 References \u00b6 Jenkins Shared Libraries Change Workspace Root Using ws Python client Material Docker https://vzurczak.wordpress.com/2020/04/17/combining-jenkins-job-dsl-and-shared-libraries-for-docker-images-pipelines/ https://github.com/nvuillam/mega-linter#readme Parallel Execution \u00b6 https://joostvdg.github.io/jenkins-pipeline/jenkins-parallel-pipeline/ https://joostvdg.github.io/jenkinsx/build-packs/ latest version \u00b6 https://www.digitalocean.com/community/tutorials/how-to-migrate-a-docker-compose-workflow-to-kubernetes https://medium.com/@karansingh010/running-kubernetes-in-docker-a26f4311fae1 https://callistaenterprise.se/blogg/teknik/2017/12/20/kubernetes-on-docker-in-docker/ https://leetcode.com/problems/longest-word-in-dictionary/ https://min.io/resources/docs/Spark-S3Select.pdf","title":"Links To Read"},{"location":"contibute/links.html#links-to-read","text":"Checkout to Local Branch MBP setup predefined token for user https://vianneyfaivre.com/tech/jenkins-pipelines-how-to-load-groovy-classes-dynamically-copy","title":"Links To Read"},{"location":"contibute/links.html#multibranch-jdsl","text":"JobDSL example for setting up master / release branch builds + PR builds via bitbucket-branch-source-plugin (using the generated JobDSL) MultibranchPipelineJobBuilder https://community.atlassian.com/t5/Marketplace-Apps-Integrations/Groovy-script-to-run-Jenkins-Job-DSL-to-retrieve-all/qaq-p/825422 https://gist.github.com/jondkelley/fc7812158d98003ea504365a6195d59a https://github.com/chit787/jenkins-jobs/blob/9bacd25e1b723ef7f350b2ac8b70be465067118d/jobs/test1/cypress.groovy https://github.com/sumeetraheja/seed-jobs/blob/5698c6f1a3d66586d3454355126bc84a43fcfb64/jobs/checkout/checkout_backend_api_tests_job.groovy","title":"Multibranch jdsl"},{"location":"contibute/links.html#vs-code","text":"https://github.com/cmderdev/cmder/wiki/Seamless-VS-Code-Integration https://winsmarts.com/using-cmder-as-integrated-shell-in-vscode-c3340714fe3c https://viatsko.github.io/awesome-vscode/","title":"VS Code"},{"location":"contibute/links.html#translators","text":"https://coderoad.ru/51140392/Jenkins-%D0%B7%D0%B0%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-dsl-%D0%B4%D0%BB%D1%8F-bitbucket-%D1%84%D0%B8%D0%BB%D0%B8%D0%B0%D0%BB%D0%B0-%D0%B8%D1%81%D1%85%D0%BE%D0%B4%D0%BD%D0%B0%D1%8F-%D0%B4%D0%BE%D0%BA%D1%83%D0%BC%D0%B5%D0%BD%D1%82%D0%B0%D1%86%D0%B8%D1%8F-%D0%BF%D0%BB%D0%B0%D0%B3%D0%B8%D0%BD%D0%B0-%D1%81 https://groups.google.com/forum/#!topic/job-dsl-plugin/IVu1oBjqJao","title":"Translators"},{"location":"contibute/links.html#jenkins-plugins","text":"https://plugins.jenkins.io/extended-choice-parameter/ https://jenkinsci.github.io/job-dsl-plugin/#method/javaposse.jobdsl.dsl.helpers.BuildParametersContext.gitParam","title":"Jenkins Plugins"},{"location":"contibute/links.html#jenlib-jenkins-automation-library","text":"Jenlib is Shared Basic Usage: see README.md","title":"Jenlib. Jenkins Automation Library"},{"location":"contibute/links.html#job-dsl","text":"https://github.com/Ticketfly/jenkins-docker-examples https://www.praqma.com/stories/dockerized-jenkins-jobdsl/ https://github.com/thomasleveil/docker-jenkins-dsl-ready https://github.com/jenkinsci/job-dsl-plugin/wiki/User-Power-Moves#run-a-dsl-script-locally https://www.jenkins.io/blog/2019/08/23/introducing-gitlab-branch-source-plugin/ https://gist.github.com/baymac/f1a2249a0ec7b999c057056937e752a6","title":"Job DSL"},{"location":"contibute/links.html#references","text":"Jenkins Shared Libraries Change Workspace Root Using ws Python client Material Docker https://vzurczak.wordpress.com/2020/04/17/combining-jenkins-job-dsl-and-shared-libraries-for-docker-images-pipelines/ https://github.com/nvuillam/mega-linter#readme","title":"References"},{"location":"contibute/links.html#parallel-execution","text":"https://joostvdg.github.io/jenkins-pipeline/jenkins-parallel-pipeline/ https://joostvdg.github.io/jenkinsx/build-packs/","title":"Parallel Execution"},{"location":"contibute/links.html#latest-version","text":"https://www.digitalocean.com/community/tutorials/how-to-migrate-a-docker-compose-workflow-to-kubernetes https://medium.com/@karansingh010/running-kubernetes-in-docker-a26f4311fae1 https://callistaenterprise.se/blogg/teknik/2017/12/20/kubernetes-on-docker-in-docker/ https://leetcode.com/problems/longest-word-in-dictionary/ https://min.io/resources/docs/Spark-S3Select.pdf","title":"latest version"},{"location":"guides/docker-build.html","text":"Docker Build Options \u00b6 https://mauilion.dev/posts/kind-pvc/ Build from a local build context, using a Dockerfile from stdin \u00b6 # create a directory to work in mkdir example cd example # create an example file touch somefile.txt # build an image using the current directory as context, and a Dockerfile passed through stdin docker build -t myimage:latest -f- . <<EOF FROM busybox COPY somefile.txt ./ RUN cat /somefile.txt EOF Use multi-stage builds\ud83d\udd17 \u00b6 # syntax=docker/dockerfile:1 FROM golang:1.16-alpine AS build # Install tools required for project # Run `docker build --no-cache .` to update dependencies RUN apk add --no-cache git RUN go get github.com/golang/dep/cmd/dep # List project dependencies with Gopkg.toml and Gopkg.lock # These layers are only re-built when Gopkg files are updated COPY Gopkg.lock Gopkg.toml /go/src/project/ WORKDIR /go/src/project/ # Install library dependencies RUN dep ensure -vendor-only # Copy the entire project and build it # This layer is rebuilt when a file changes in the project directory COPY . /go/src/project/ RUN go build -o /bin/project # This results in a single layer image FROM scratch COPY --from = build /bin/project /bin/project ENTRYPOINT [ \"/bin/project\" ] CMD [ \"--help\" ]","title":"Docker Build Options"},{"location":"guides/docker-build.html#docker-build-options","text":"https://mauilion.dev/posts/kind-pvc/","title":"Docker Build Options"},{"location":"guides/docker-build.html#build-from-a-local-build-context-using-a-dockerfile-from-stdin","text":"# create a directory to work in mkdir example cd example # create an example file touch somefile.txt # build an image using the current directory as context, and a Dockerfile passed through stdin docker build -t myimage:latest -f- . <<EOF FROM busybox COPY somefile.txt ./ RUN cat /somefile.txt EOF","title":"Build from a local build context, using a Dockerfile from stdin"},{"location":"guides/docker-build.html#use-multi-stage-builds","text":"# syntax=docker/dockerfile:1 FROM golang:1.16-alpine AS build # Install tools required for project # Run `docker build --no-cache .` to update dependencies RUN apk add --no-cache git RUN go get github.com/golang/dep/cmd/dep # List project dependencies with Gopkg.toml and Gopkg.lock # These layers are only re-built when Gopkg files are updated COPY Gopkg.lock Gopkg.toml /go/src/project/ WORKDIR /go/src/project/ # Install library dependencies RUN dep ensure -vendor-only # Copy the entire project and build it # This layer is rebuilt when a file changes in the project directory COPY . /go/src/project/ RUN go build -o /bin/project # This results in a single layer image FROM scratch COPY --from = build /bin/project /bin/project ENTRYPOINT [ \"/bin/project\" ] CMD [ \"--help\" ]","title":"Use multi-stage builds\ud83d\udd17"},{"location":"guides/docker-compose.html","text":"docker-compose \u00b6 redmine-postgres","title":"docker-compose"},{"location":"guides/docker-compose.html#docker-compose","text":"redmine-postgres","title":"docker-compose"},{"location":"guides/jenkins-guide.html","text":"Jenkins \u00b6 https://medium.com/@ragin/jenkins-jenkins-configuration-as-code-jcasc-together-with-jobdsl-on-kubernetes-2f5a173491ab https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/README.md JCasC Jenkins Configuration as a code \u00b6 https://www.eficode.com/blog/start-jenkins-config-as-code https://verifa.io/insights/getting-started-with-jenkins-config-as-code/ https://cloud.google.com/architecture/managing-infrastructure-as-code-with-terraform-jenkins-and-gitops Worker Allocators \u00b6 ec2-spot-jenkins-plugin \u00b6 The EC2 Spot Jenkins plugin launches EC2 Spot instances as worker nodes for Jenkins CI server, automatically scaling the capacity with the load. source store k8s \u00b6 https://devopscube.com/setup-jenkins-on-kubernetes-cluster/ https://www.blazemeter.com/blog/how-to-setup-scalable-jenkins-on-top-of-a-kubernetes-cluster docker \u00b6 https://github.com/jenkinsci/docker/issues/263 https://www.insanity.org.uk/2017/04/03/giving-jenkins-access-to-docker/ https://adamtheautomator.com/jenkins-agent/","title":"Jenkins"},{"location":"guides/jenkins-guide.html#jenkins","text":"https://medium.com/@ragin/jenkins-jenkins-configuration-as-code-jcasc-together-with-jobdsl-on-kubernetes-2f5a173491ab https://github.com/jenkinsci/configuration-as-code-plugin/blob/master/README.md","title":"Jenkins"},{"location":"guides/jenkins-guide.html#jcasc-jenkins-configuration-as-a-code","text":"https://www.eficode.com/blog/start-jenkins-config-as-code https://verifa.io/insights/getting-started-with-jenkins-config-as-code/ https://cloud.google.com/architecture/managing-infrastructure-as-code-with-terraform-jenkins-and-gitops","title":"JCasC Jenkins Configuration as a code"},{"location":"guides/jenkins-guide.html#worker-allocators","text":"","title":"Worker Allocators"},{"location":"guides/jenkins-guide.html#ec2-spot-jenkins-plugin","text":"The EC2 Spot Jenkins plugin launches EC2 Spot instances as worker nodes for Jenkins CI server, automatically scaling the capacity with the load. source store","title":"ec2-spot-jenkins-plugin"},{"location":"guides/jenkins-guide.html#k8s","text":"https://devopscube.com/setup-jenkins-on-kubernetes-cluster/ https://www.blazemeter.com/blog/how-to-setup-scalable-jenkins-on-top-of-a-kubernetes-cluster","title":"k8s"},{"location":"guides/jenkins-guide.html#docker","text":"https://github.com/jenkinsci/docker/issues/263 https://www.insanity.org.uk/2017/04/03/giving-jenkins-access-to-docker/ https://adamtheautomator.com/jenkins-agent/","title":"docker"},{"location":"guides/jenkins-jobdsl-guide.html","text":"Jobs \u00b6 https://devops.datenkollektiv.de/from-plain-groovy-to-jenkins-job-dsl-a-quantum-jump.html Docker file example \u00b6 FROM jenkinsci/jenkins:2.61 .... ADD jobs.groovy /var/jenkins_home/ RUN /usr/local/bin/install-plugins.sh job-dsl:1.63 git:3.3.0 workflow-aggregator:2.5 COPY create-initial-jobs-with-dsl.groovy /var/jenkins_home/init.groovy.d/ import javaposse.jobdsl.dsl.DslScriptLoader import javaposse.jobdsl.plugin.JenkinsJobManagement def jobDslScript = new File ( '/var/jenkins_home/jobs.groovy' ) def workspace = new File ( '.' ) def jobManagement = new JenkinsJobManagement ( System . out , [:], workspace ) new DslScriptLoader ( jobManagement ). runScript ( jobDslScript . text ) pipelineJob ( 'planets-homepage' ) { definition { cpsScm { scm { git { remote { credentials ( 'planets-homepage_id_rsa' ) url ( 'git@github.com:datenkollektiv/planets-homepage.git' ) } } } scriptPath ( 'Jenkinsfile' ) } } scm { git { remote { credentials ( 'planets-homepage_id_rsa' ) url ( 'git@github.com:datenkollektiv/planets-homepage.git' ) } } } triggers { cron ( '@midnight' ) } }","title":"Jobs"},{"location":"guides/jenkins-jobdsl-guide.html#jobs","text":"https://devops.datenkollektiv.de/from-plain-groovy-to-jenkins-job-dsl-a-quantum-jump.html","title":"Jobs"},{"location":"guides/jenkins-jobdsl-guide.html#docker-file-example","text":"FROM jenkinsci/jenkins:2.61 .... ADD jobs.groovy /var/jenkins_home/ RUN /usr/local/bin/install-plugins.sh job-dsl:1.63 git:3.3.0 workflow-aggregator:2.5 COPY create-initial-jobs-with-dsl.groovy /var/jenkins_home/init.groovy.d/ import javaposse.jobdsl.dsl.DslScriptLoader import javaposse.jobdsl.plugin.JenkinsJobManagement def jobDslScript = new File ( '/var/jenkins_home/jobs.groovy' ) def workspace = new File ( '.' ) def jobManagement = new JenkinsJobManagement ( System . out , [:], workspace ) new DslScriptLoader ( jobManagement ). runScript ( jobDslScript . text ) pipelineJob ( 'planets-homepage' ) { definition { cpsScm { scm { git { remote { credentials ( 'planets-homepage_id_rsa' ) url ( 'git@github.com:datenkollektiv/planets-homepage.git' ) } } } scriptPath ( 'Jenkinsfile' ) } } scm { git { remote { credentials ( 'planets-homepage_id_rsa' ) url ( 'git@github.com:datenkollektiv/planets-homepage.git' ) } } } triggers { cron ( '@midnight' ) } }","title":"Docker file example"},{"location":"guides/jupyter-guide.html","text":"Guide For Jupyter \u00b6 Best Tools \u00b6 https://github.com/ml-tooling/best-of-jupyter Graph visualization \u00b6 https://cambridge-intelligence.com/python-graph-visualization-using-jupyter-regraph/","title":"Guide For Jupyter"},{"location":"guides/jupyter-guide.html#guide-for-jupyter","text":"","title":"Guide For Jupyter"},{"location":"guides/jupyter-guide.html#best-tools","text":"https://github.com/ml-tooling/best-of-jupyter","title":"Best Tools"},{"location":"guides/jupyter-guide.html#graph-visualization","text":"https://cambridge-intelligence.com/python-graph-visualization-using-jupyter-regraph/","title":"Graph visualization"},{"location":"guides/mermaid-flows.html","text":"Mermaid Flows Language \u00b6 #CI-FULL-FLOW sample \u00b6 flowchart subgraph ci-flow-full subgraph Storage Local site seed end subgraph ci-flow-g[ci-flow] test-flow[test-flow] --> build-flow[build-flow] --> build-prepare-step[prepare-build] build-flow -.-> site test-flow -.-> site end subgraph publish-flow-g[publish to github] report-publish --> publish-docs end subgraph Storage Global site-rem info-rem end site --> build-flow site --> test-flow end site-rem --> publish-docs --> site publish-docs -.-> site-rem report-publish -.-> info-rem https://github.com/mermaid-js/mermaid/blob/master/README.md https://mermaid-js.github.io/mermaid-live-editor/edit#eyJjb2RlIjoiZmxvd2NoYXJ0IFxuICAgIHN1YmdyYXBoIGNpLWZsb3ctZnVsbFxuICAgICAgICBzdWJncmFwaCBTdG9yYWdlIExvY2FsXG4gICAgICAgIHNpdGVcbiAgICAgICAgc2VlZFxuICAgIGVuZFxuICAgICAgICBzdWJncmFwaCBjaS1mbG93LWdbY2ktZmxvd11cbiAgICAgICAgICAgIHRlc3QtZmxvd1t0ZXN0LWZsb3ddICAtLT4gXG4gICAgICAgICAgICBidWlsZC1mbG93W2J1aWxkLWZsb3ddIC0tPlxuICAgICAgICAgICAgYnVpbGQtcHJlcGFyZS1zdGVwW3ByZXBhcmUtYnVpbGRdXG4gICAgICAgICAgICBidWlsZC1mbG93IC0uLT4gc2l0ZVxuICAgICAgICAgICAgdGVzdC1mbG93IC0uLT4gc2l0ZVxuICAgICAgICBlbmRcblxuICAgICAgICBzdWJncmFwaCBwdWJsaXNoLWZsb3ctZ1twdWJsaXNoIHRvIGdpdGh1Yl1cbiAgICAgICAgICAgIHJlcG9ydC1wdWJsaXNoICAtLT5cbiAgICAgICAgICAgIHB1Ymxpc2gtZG9jc1xuICAgICAgICBlbmRcblxuICAgIHN1YmdyYXBoIFN0b3JhZ2UgR2xvYmFsXG4gICAgICAgIHNpdGUtcmVtXG4gICAgICAgIGluZm8tcmVtXG4gICAgZW5kXG4gICAgc2l0ZSAtLT4gYnVpbGQtZmxvd1xuICAgIHNpdGUgLS0-IHRlc3QtZmxvd1xuICAgIGVuZFxuICAgIHNpdGUtcmVtIC0tPiBwdWJsaXNoLWRvY3MgLS0-IHNpdGVcbiAgICBwdWJsaXNoLWRvY3MgLS4tPiBzaXRlLXJlbVxuICAgIHJlcG9ydC1wdWJsaXNoIC0uLT4gaW5mby1yZW1cblxuIiwibWVybWFpZCI6IntcbiAgXCJ0aGVtZVwiOiBcImRlZmF1bHRcIixcbiAgXCJ0aGVtZVZhcmlhYmxlc1wiOiB7XG4gICAgXCJiYWNrZ3JvdW5kXCI6IFwid2hpdGVcIixcbiAgICBcInByaW1hcnlDb2xvclwiOiBcIiNFQ0VDRkZcIixcbiAgICBcInNlY29uZGFyeUNvbG9yXCI6IFwiI2ZmZmZkZVwiLFxuICAgIFwidGVydGlhcnlDb2xvclwiOiBcImhzbCg4MCwgMTAwJSwgOTYuMjc0NTA5ODAzOSUpXCIsXG4gICAgXCJwcmltYXJ5Qm9yZGVyQ29sb3JcIjogXCJoc2woMjQwLCA2MCUsIDg2LjI3NDUwOTgwMzklKVwiLFxuICAgIFwic2Vjb25kYXJ5Qm9yZGVyQ29sb3JcIjogXCJoc2woNjAsIDYwJSwgODMuNTI5NDExNzY0NyUpXCIsXG4gICAgXCJ0ZXJ0aWFyeUJvcmRlckNvbG9yXCI6IFwiaHNsKDgwLCA2MCUsIDg2LjI3NDUwOTgwMzklKVwiLFxuICAgIFwicHJpbWFyeVRleHRDb2xvclwiOiBcIiMxMzEzMDBcIixcbiAgICBcInNlY29uZGFyeVRleHRDb2xvclwiOiBcIiMwMDAwMjFcIixcbiAgICBcInRlcnRpYXJ5VGV4dENvbG9yXCI6IFwicmdiKDkuNTAwMDAwMDAwMSwgOS41MDAwMDAwMDAxLCA5LjUwMDAwMDAwMDEpXCIsXG4gICAgXCJsaW5lQ29sb3JcIjogXCIjMzMzMzMzXCIsXG4gICAgXCJ0ZXh0Q29sb3JcIjogXCIjMzMzXCIsXG4gICAgXCJtYWluQmtnXCI6IFwiI0VDRUNGRlwiLFxuICAgIFwic2Vjb25kQmtnXCI6IFwiI2ZmZmZkZVwiLFxuICAgIFwiYm9yZGVyMVwiOiBcIiM5MzcwREJcIixcbiAgICBcImJvcmRlcjJcIjogXCIjYWFhYTMzXCIsXG4gICAgXCJhcnJvd2hlYWRDb2xvclwiOiBcIiMzMzMzMzNcIixcbiAgICBcImZvbnRGYW1pbHlcIjogXCJcXFwidHJlYnVjaGV0IG1zXFxcIiwgdmVyZGFuYSwgYXJpYWxcIixcbiAgICBcImZvbnRTaXplXCI6IFwiMTZweFwiLFxuICAgIFwibGFiZWxCYWNrZ3JvdW5kXCI6IFwiI2U4ZThlOFwiLFxuICAgIFwibm9kZUJrZ1wiOiBcIiNFQ0VDRkZcIixcbiAgICBcIm5vZGVCb3JkZXJcIjogXCIjOTM3MERCXCIsXG4gICAgXCJjbHVzdGVyQmtnXCI6IFwiI2ZmZmZkZVwiLFxuICAgIFwiY2x1c3RlckJvcmRlclwiOiBcIiNhYWFhMzNcIixcbiAgICBcImRlZmF1bHRMaW5rQ29sb3JcIjogXCIjMzMzMzMzXCIsXG4gICAgXCJ0aXRsZUNvbG9yXCI6IFwiIzMzM1wiLFxuICAgIFwiZWRnZUxhYmVsQmFja2dyb3VuZFwiOiBcIiNlOGU4ZThcIixcbiAgICBcImFjdG9yQm9yZGVyXCI6IFwiaHNsKDI1OS42MjYxNjgyMjQzLCA1OS43NzY1MzYzMTI4JSwgODcuOTAxOTYwNzg0MyUpXCIsXG4gICAgXCJhY3RvckJrZ1wiOiBcIiNFQ0VDRkZcIixcbiAgICBcImFjdG9yVGV4dENvbG9yXCI6IFwiYmxhY2tcIixcbiAgICBcImFjdG9yTGluZUNvbG9yXCI6IFwiZ3JleVwiLFxuICAgIFwic2lnbmFsQ29sb3JcIjogXCIjMzMzXCIsXG4gICAgXCJzaWduYWxUZXh0Q29sb3JcIjogXCIjMzMzXCIsXG4gICAgXCJsYWJlbEJveEJrZ0NvbG9yXCI6IFwiI0VDRUNGRlwiLFxuICAgIFwibGFiZWxCb3hCb3JkZXJDb2xvclwiOiBcImhzbCgyNTkuNjI2MTY4MjI0MywgNTkuNzc2NTM2MzEyOCUsIDg3LjkwMTk2MDc4NDMlKVwiLFxuICAgIFwibGFiZWxUZXh0Q29sb3JcIjogXCJibGFja1wiLFxuICAgIFwibG9vcFRleHRDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJub3RlQm9yZGVyQ29sb3JcIjogXCIjYWFhYTMzXCIsXG4gICAgXCJub3RlQmtnQ29sb3JcIjogXCIjZmZmNWFkXCIsXG4gICAgXCJub3RlVGV4dENvbG9yXCI6IFwiYmxhY2tcIixcbiAgICBcImFjdGl2YXRpb25Cb3JkZXJDb2xvclwiOiBcIiM2NjZcIixcbiAgICBcImFjdGl2YXRpb25Ca2dDb2xvclwiOiBcIiNmNGY0ZjRcIixcbiAgICBcInNlcXVlbmNlTnVtYmVyQ29sb3JcIjogXCJ3aGl0ZVwiLFxuICAgIFwic2VjdGlvbkJrZ0NvbG9yXCI6IFwicmdiYSgxMDIsIDEwMiwgMjU1LCAwLjQ5KVwiLFxuICAgIFwiYWx0U2VjdGlvbkJrZ0NvbG9yXCI6IFwid2hpdGVcIixcbiAgICBcInNlY3Rpb25Ca2dDb2xvcjJcIjogXCIjZmZmNDAwXCIsXG4gICAgXCJ0YXNrQm9yZGVyQ29sb3JcIjogXCIjNTM0ZmJjXCIsXG4gICAgXCJ0YXNrQmtnQ29sb3JcIjogXCIjOGE5MGRkXCIsXG4gICAgXCJ0YXNrVGV4dExpZ2h0Q29sb3JcIjogXCJ3aGl0ZVwiLFxuICAgIFwidGFza1RleHRDb2xvclwiOiBcIndoaXRlXCIsXG4gICAgXCJ0YXNrVGV4dERhcmtDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJ0YXNrVGV4dE91dHNpZGVDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJ0YXNrVGV4dENsaWNrYWJsZUNvbG9yXCI6IFwiIzAwMzE2M1wiLFxuICAgIFwiYWN0aXZlVGFza0JvcmRlckNvbG9yXCI6IFwiIzUzNGZiY1wiLFxuICAgIFwiYWN0aXZlVGFza0JrZ0NvbG9yXCI6IFwiI2JmYzdmZlwiLFxuICAgIFwiZ3JpZENvbG9yXCI6IFwibGlnaHRncmV5XCIsXG4gICAgXCJkb25lVGFza0JrZ0NvbG9yXCI6IFwibGlnaHRncmV5XCIsXG4gICAgXCJkb25lVGFza0JvcmRlckNvbG9yXCI6IFwiZ3JleVwiLFxuICAgIFwiY3JpdEJvcmRlckNvbG9yXCI6IFwiI2ZmODg4OFwiLFxuICAgIFwiY3JpdEJrZ0NvbG9yXCI6IFwicmVkXCIsXG4gICAgXCJ0b2RheUxpbmVDb2xvclwiOiBcInJlZFwiLFxuICAgIFwibGFiZWxDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJlcnJvckJrZ0NvbG9yXCI6IFwiIzU1MjIyMlwiLFxuICAgIFwiZXJyb3JUZXh0Q29sb3JcIjogXCIjNTUyMjIyXCIsXG4gICAgXCJjbGFzc1RleHRcIjogXCIjMTMxMzAwXCIsXG4gICAgXCJmaWxsVHlwZTBcIjogXCIjRUNFQ0ZGXCIsXG4gICAgXCJmaWxsVHlwZTFcIjogXCIjZmZmZmRlXCIsXG4gICAgXCJmaWxsVHlwZTJcIjogXCJoc2woMzA0LCAxMDAlLCA5Ni4yNzQ1MDk4MDM5JSlcIixcbiAgICBcImZpbGxUeXBlM1wiOiBcImhzbCgxMjQsIDEwMCUsIDkzLjUyOTQxMTc2NDclKVwiLFxuICAgIFwiZmlsbFR5cGU0XCI6IFwiaHNsKDE3NiwgMTAwJSwgOTYuMjc0NTA5ODAzOSUpXCIsXG4gICAgXCJmaWxsVHlwZTVcIjogXCJoc2woLTQsIDEwMCUsIDkzLjUyOTQxMTc2NDclKVwiLFxuICAgIFwiZmlsbFR5cGU2XCI6IFwiaHNsKDgsIDEwMCUsIDk2LjI3NDUwOTgwMzklKVwiLFxuICAgIFwiZmlsbFR5cGU3XCI6IFwiaHNsKDE4OCwgMTAwJSwgOTMuNTI5NDExNzY0NyUpXCJcbiAgfVxufSIsInVwZGF0ZUVkaXRvciI6ZmFsc2UsImF1dG9TeW5jIjp0cnVlLCJ1cGRhdGVEaWFncmFtIjpmYWxzZX0","title":"Mermaid Flows Language"},{"location":"guides/mermaid-flows.html#mermaid-flows-language","text":"","title":"Mermaid Flows Language"},{"location":"guides/mermaid-flows.html#ci-full-flow-sample","text":"flowchart subgraph ci-flow-full subgraph Storage Local site seed end subgraph ci-flow-g[ci-flow] test-flow[test-flow] --> build-flow[build-flow] --> build-prepare-step[prepare-build] build-flow -.-> site test-flow -.-> site end subgraph publish-flow-g[publish to github] report-publish --> publish-docs end subgraph Storage Global site-rem info-rem end site --> build-flow site --> test-flow end site-rem --> publish-docs --> site publish-docs -.-> site-rem report-publish -.-> info-rem https://github.com/mermaid-js/mermaid/blob/master/README.md https://mermaid-js.github.io/mermaid-live-editor/edit#eyJjb2RlIjoiZmxvd2NoYXJ0IFxuICAgIHN1YmdyYXBoIGNpLWZsb3ctZnVsbFxuICAgICAgICBzdWJncmFwaCBTdG9yYWdlIExvY2FsXG4gICAgICAgIHNpdGVcbiAgICAgICAgc2VlZFxuICAgIGVuZFxuICAgICAgICBzdWJncmFwaCBjaS1mbG93LWdbY2ktZmxvd11cbiAgICAgICAgICAgIHRlc3QtZmxvd1t0ZXN0LWZsb3ddICAtLT4gXG4gICAgICAgICAgICBidWlsZC1mbG93W2J1aWxkLWZsb3ddIC0tPlxuICAgICAgICAgICAgYnVpbGQtcHJlcGFyZS1zdGVwW3ByZXBhcmUtYnVpbGRdXG4gICAgICAgICAgICBidWlsZC1mbG93IC0uLT4gc2l0ZVxuICAgICAgICAgICAgdGVzdC1mbG93IC0uLT4gc2l0ZVxuICAgICAgICBlbmRcblxuICAgICAgICBzdWJncmFwaCBwdWJsaXNoLWZsb3ctZ1twdWJsaXNoIHRvIGdpdGh1Yl1cbiAgICAgICAgICAgIHJlcG9ydC1wdWJsaXNoICAtLT5cbiAgICAgICAgICAgIHB1Ymxpc2gtZG9jc1xuICAgICAgICBlbmRcblxuICAgIHN1YmdyYXBoIFN0b3JhZ2UgR2xvYmFsXG4gICAgICAgIHNpdGUtcmVtXG4gICAgICAgIGluZm8tcmVtXG4gICAgZW5kXG4gICAgc2l0ZSAtLT4gYnVpbGQtZmxvd1xuICAgIHNpdGUgLS0-IHRlc3QtZmxvd1xuICAgIGVuZFxuICAgIHNpdGUtcmVtIC0tPiBwdWJsaXNoLWRvY3MgLS0-IHNpdGVcbiAgICBwdWJsaXNoLWRvY3MgLS4tPiBzaXRlLXJlbVxuICAgIHJlcG9ydC1wdWJsaXNoIC0uLT4gaW5mby1yZW1cblxuIiwibWVybWFpZCI6IntcbiAgXCJ0aGVtZVwiOiBcImRlZmF1bHRcIixcbiAgXCJ0aGVtZVZhcmlhYmxlc1wiOiB7XG4gICAgXCJiYWNrZ3JvdW5kXCI6IFwid2hpdGVcIixcbiAgICBcInByaW1hcnlDb2xvclwiOiBcIiNFQ0VDRkZcIixcbiAgICBcInNlY29uZGFyeUNvbG9yXCI6IFwiI2ZmZmZkZVwiLFxuICAgIFwidGVydGlhcnlDb2xvclwiOiBcImhzbCg4MCwgMTAwJSwgOTYuMjc0NTA5ODAzOSUpXCIsXG4gICAgXCJwcmltYXJ5Qm9yZGVyQ29sb3JcIjogXCJoc2woMjQwLCA2MCUsIDg2LjI3NDUwOTgwMzklKVwiLFxuICAgIFwic2Vjb25kYXJ5Qm9yZGVyQ29sb3JcIjogXCJoc2woNjAsIDYwJSwgODMuNTI5NDExNzY0NyUpXCIsXG4gICAgXCJ0ZXJ0aWFyeUJvcmRlckNvbG9yXCI6IFwiaHNsKDgwLCA2MCUsIDg2LjI3NDUwOTgwMzklKVwiLFxuICAgIFwicHJpbWFyeVRleHRDb2xvclwiOiBcIiMxMzEzMDBcIixcbiAgICBcInNlY29uZGFyeVRleHRDb2xvclwiOiBcIiMwMDAwMjFcIixcbiAgICBcInRlcnRpYXJ5VGV4dENvbG9yXCI6IFwicmdiKDkuNTAwMDAwMDAwMSwgOS41MDAwMDAwMDAxLCA5LjUwMDAwMDAwMDEpXCIsXG4gICAgXCJsaW5lQ29sb3JcIjogXCIjMzMzMzMzXCIsXG4gICAgXCJ0ZXh0Q29sb3JcIjogXCIjMzMzXCIsXG4gICAgXCJtYWluQmtnXCI6IFwiI0VDRUNGRlwiLFxuICAgIFwic2Vjb25kQmtnXCI6IFwiI2ZmZmZkZVwiLFxuICAgIFwiYm9yZGVyMVwiOiBcIiM5MzcwREJcIixcbiAgICBcImJvcmRlcjJcIjogXCIjYWFhYTMzXCIsXG4gICAgXCJhcnJvd2hlYWRDb2xvclwiOiBcIiMzMzMzMzNcIixcbiAgICBcImZvbnRGYW1pbHlcIjogXCJcXFwidHJlYnVjaGV0IG1zXFxcIiwgdmVyZGFuYSwgYXJpYWxcIixcbiAgICBcImZvbnRTaXplXCI6IFwiMTZweFwiLFxuICAgIFwibGFiZWxCYWNrZ3JvdW5kXCI6IFwiI2U4ZThlOFwiLFxuICAgIFwibm9kZUJrZ1wiOiBcIiNFQ0VDRkZcIixcbiAgICBcIm5vZGVCb3JkZXJcIjogXCIjOTM3MERCXCIsXG4gICAgXCJjbHVzdGVyQmtnXCI6IFwiI2ZmZmZkZVwiLFxuICAgIFwiY2x1c3RlckJvcmRlclwiOiBcIiNhYWFhMzNcIixcbiAgICBcImRlZmF1bHRMaW5rQ29sb3JcIjogXCIjMzMzMzMzXCIsXG4gICAgXCJ0aXRsZUNvbG9yXCI6IFwiIzMzM1wiLFxuICAgIFwiZWRnZUxhYmVsQmFja2dyb3VuZFwiOiBcIiNlOGU4ZThcIixcbiAgICBcImFjdG9yQm9yZGVyXCI6IFwiaHNsKDI1OS42MjYxNjgyMjQzLCA1OS43NzY1MzYzMTI4JSwgODcuOTAxOTYwNzg0MyUpXCIsXG4gICAgXCJhY3RvckJrZ1wiOiBcIiNFQ0VDRkZcIixcbiAgICBcImFjdG9yVGV4dENvbG9yXCI6IFwiYmxhY2tcIixcbiAgICBcImFjdG9yTGluZUNvbG9yXCI6IFwiZ3JleVwiLFxuICAgIFwic2lnbmFsQ29sb3JcIjogXCIjMzMzXCIsXG4gICAgXCJzaWduYWxUZXh0Q29sb3JcIjogXCIjMzMzXCIsXG4gICAgXCJsYWJlbEJveEJrZ0NvbG9yXCI6IFwiI0VDRUNGRlwiLFxuICAgIFwibGFiZWxCb3hCb3JkZXJDb2xvclwiOiBcImhzbCgyNTkuNjI2MTY4MjI0MywgNTkuNzc2NTM2MzEyOCUsIDg3LjkwMTk2MDc4NDMlKVwiLFxuICAgIFwibGFiZWxUZXh0Q29sb3JcIjogXCJibGFja1wiLFxuICAgIFwibG9vcFRleHRDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJub3RlQm9yZGVyQ29sb3JcIjogXCIjYWFhYTMzXCIsXG4gICAgXCJub3RlQmtnQ29sb3JcIjogXCIjZmZmNWFkXCIsXG4gICAgXCJub3RlVGV4dENvbG9yXCI6IFwiYmxhY2tcIixcbiAgICBcImFjdGl2YXRpb25Cb3JkZXJDb2xvclwiOiBcIiM2NjZcIixcbiAgICBcImFjdGl2YXRpb25Ca2dDb2xvclwiOiBcIiNmNGY0ZjRcIixcbiAgICBcInNlcXVlbmNlTnVtYmVyQ29sb3JcIjogXCJ3aGl0ZVwiLFxuICAgIFwic2VjdGlvbkJrZ0NvbG9yXCI6IFwicmdiYSgxMDIsIDEwMiwgMjU1LCAwLjQ5KVwiLFxuICAgIFwiYWx0U2VjdGlvbkJrZ0NvbG9yXCI6IFwid2hpdGVcIixcbiAgICBcInNlY3Rpb25Ca2dDb2xvcjJcIjogXCIjZmZmNDAwXCIsXG4gICAgXCJ0YXNrQm9yZGVyQ29sb3JcIjogXCIjNTM0ZmJjXCIsXG4gICAgXCJ0YXNrQmtnQ29sb3JcIjogXCIjOGE5MGRkXCIsXG4gICAgXCJ0YXNrVGV4dExpZ2h0Q29sb3JcIjogXCJ3aGl0ZVwiLFxuICAgIFwidGFza1RleHRDb2xvclwiOiBcIndoaXRlXCIsXG4gICAgXCJ0YXNrVGV4dERhcmtDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJ0YXNrVGV4dE91dHNpZGVDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJ0YXNrVGV4dENsaWNrYWJsZUNvbG9yXCI6IFwiIzAwMzE2M1wiLFxuICAgIFwiYWN0aXZlVGFza0JvcmRlckNvbG9yXCI6IFwiIzUzNGZiY1wiLFxuICAgIFwiYWN0aXZlVGFza0JrZ0NvbG9yXCI6IFwiI2JmYzdmZlwiLFxuICAgIFwiZ3JpZENvbG9yXCI6IFwibGlnaHRncmV5XCIsXG4gICAgXCJkb25lVGFza0JrZ0NvbG9yXCI6IFwibGlnaHRncmV5XCIsXG4gICAgXCJkb25lVGFza0JvcmRlckNvbG9yXCI6IFwiZ3JleVwiLFxuICAgIFwiY3JpdEJvcmRlckNvbG9yXCI6IFwiI2ZmODg4OFwiLFxuICAgIFwiY3JpdEJrZ0NvbG9yXCI6IFwicmVkXCIsXG4gICAgXCJ0b2RheUxpbmVDb2xvclwiOiBcInJlZFwiLFxuICAgIFwibGFiZWxDb2xvclwiOiBcImJsYWNrXCIsXG4gICAgXCJlcnJvckJrZ0NvbG9yXCI6IFwiIzU1MjIyMlwiLFxuICAgIFwiZXJyb3JUZXh0Q29sb3JcIjogXCIjNTUyMjIyXCIsXG4gICAgXCJjbGFzc1RleHRcIjogXCIjMTMxMzAwXCIsXG4gICAgXCJmaWxsVHlwZTBcIjogXCIjRUNFQ0ZGXCIsXG4gICAgXCJmaWxsVHlwZTFcIjogXCIjZmZmZmRlXCIsXG4gICAgXCJmaWxsVHlwZTJcIjogXCJoc2woMzA0LCAxMDAlLCA5Ni4yNzQ1MDk4MDM5JSlcIixcbiAgICBcImZpbGxUeXBlM1wiOiBcImhzbCgxMjQsIDEwMCUsIDkzLjUyOTQxMTc2NDclKVwiLFxuICAgIFwiZmlsbFR5cGU0XCI6IFwiaHNsKDE3NiwgMTAwJSwgOTYuMjc0NTA5ODAzOSUpXCIsXG4gICAgXCJmaWxsVHlwZTVcIjogXCJoc2woLTQsIDEwMCUsIDkzLjUyOTQxMTc2NDclKVwiLFxuICAgIFwiZmlsbFR5cGU2XCI6IFwiaHNsKDgsIDEwMCUsIDk2LjI3NDUwOTgwMzklKVwiLFxuICAgIFwiZmlsbFR5cGU3XCI6IFwiaHNsKDE4OCwgMTAwJSwgOTMuNTI5NDExNzY0NyUpXCJcbiAgfVxufSIsInVwZGF0ZUVkaXRvciI6ZmFsc2UsImF1dG9TeW5jIjp0cnVlLCJ1cGRhdGVEaWFncmFtIjpmYWxzZX0","title":"#CI-FULL-FLOW sample"},{"location":"guides/mkdocs-guilde.html","text":"Graphs in mkdocs \u00b6 https://pypi.org/project/mkdocs-drawio-exporter/","title":"Graphs in mkdocs"},{"location":"guides/mkdocs-guilde.html#graphs-in-mkdocs","text":"https://pypi.org/project/mkdocs-drawio-exporter/","title":"Graphs in mkdocs"},{"location":"guides/nexus-guide.html","text":"Nexus for pip docker and maven \u00b6 https://www.devopsschool.com/blog/how-to-configure-sonatype-nexus-repository-with-maven/","title":"Nexus for pip docker and maven"},{"location":"guides/nexus-guide.html#nexus-for-pip-docker-and-maven","text":"https://www.devopsschool.com/blog/how-to-configure-sonatype-nexus-repository-with-maven/","title":"Nexus for pip docker and maven"},{"location":"guides/python-guide.html","text":"Python Guide \u00b6 Junit Html Reports \u00b6 https://stackoverflow.com/questions/2385553/how-can-i-generate-an-html-report-for-junit-results/2969305 https://gitlab.com/inorton/junit2html app with pyinstaller on jenkins \u00b6 https://www.jenkins.io/doc/tutorials/build-a-python-app-with-pyinstaller/ Testing \u00b6 Amaining pytest take a look on steps https://smarie.github.io/python-pytest-steps/#a-basics and harvesting. https://smarie.github.io/python-pytest-harvest/","title":"Python Guide"},{"location":"guides/python-guide.html#python-guide","text":"","title":"Python Guide"},{"location":"guides/python-guide.html#junit-html-reports","text":"https://stackoverflow.com/questions/2385553/how-can-i-generate-an-html-report-for-junit-results/2969305 https://gitlab.com/inorton/junit2html","title":"Junit Html Reports"},{"location":"guides/python-guide.html#app-with-pyinstaller-on-jenkins","text":"https://www.jenkins.io/doc/tutorials/build-a-python-app-with-pyinstaller/","title":"app with pyinstaller on jenkins"},{"location":"guides/python-guide.html#testing","text":"Amaining pytest take a look on steps https://smarie.github.io/python-pytest-steps/#a-basics and harvesting. https://smarie.github.io/python-pytest-harvest/","title":"Testing"},{"location":"guides/sso-guide.html","text":"SSO and Auth Guide \u00b6 Redmine Jenkins KeyCloack Jenkins KeyCloak","title":"SSO and Auth Guide"},{"location":"guides/sso-guide.html#sso-and-auth-guide","text":"Redmine Jenkins KeyCloack Jenkins KeyCloak","title":"SSO and Auth Guide"},{"location":"guides/task-go-guide.html","text":"Task Go Taskfile \u00b6 IDE plugins \u00b6 https://causlayer.orgs.hk/lechuckroh/task-intellij-plugin","title":"Task Go Taskfile"},{"location":"guides/task-go-guide.html#task-go-taskfile","text":"","title":"Task Go Taskfile"},{"location":"guides/task-go-guide.html#ide-plugins","text":"https://causlayer.orgs.hk/lechuckroh/task-intellij-plugin","title":"IDE plugins"},{"location":"tutorials/4000.jenlib.parallel/samples.html","text":"samples \u00b6 Groovy to task \u00b6 compare:stage.get-submodules:groovy stage ( \"get-submodules\" ) { steps { script { dir ( \"pack-dir\" ) { sh \"git submodule update --recursive --init --jobs 16\" sh \"du -sh .\" dir ( \"the-dir\" ) { if ( env . GITLAB_OBJECT_KIND == 'push' ) { echo \"it's from push\" sh \"git checkout ${BRANCH_NAME}\" // sh \"git clean -fdx && git reset --hard && git pull\" } else { echo \"it's from MR\" sh \"rsync -zrvh ${env.WORKSPACE}/subdir/* .\" } } } } } } compare:stage.get-submodules:task.yml get-submodules : dir : pack-dir cmds : - git submodule update --recursive --init --jobs 16 - du -sh . - | pushd the-dir if [[ \"${GITLAB_OBJECT_KIND}\" == 'push' ]]; then echo \"it's from push\" git checkout ${BRANCH_NAME} # git clean -fdx && git reset --hard && git pull else echo \"it's from MR\" rsync -zrvh ${env.WORKSPACE}/subdir/* . fi popd","title":"samples"},{"location":"tutorials/4000.jenlib.parallel/samples.html#samples","text":"","title":"samples"},{"location":"tutorials/4000.jenlib.parallel/samples.html#groovy-to-task","text":"compare:stage.get-submodules:groovy stage ( \"get-submodules\" ) { steps { script { dir ( \"pack-dir\" ) { sh \"git submodule update --recursive --init --jobs 16\" sh \"du -sh .\" dir ( \"the-dir\" ) { if ( env . GITLAB_OBJECT_KIND == 'push' ) { echo \"it's from push\" sh \"git checkout ${BRANCH_NAME}\" // sh \"git clean -fdx && git reset --hard && git pull\" } else { echo \"it's from MR\" sh \"rsync -zrvh ${env.WORKSPACE}/subdir/* .\" } } } } } } compare:stage.get-submodules:task.yml get-submodules : dir : pack-dir cmds : - git submodule update --recursive --init --jobs 16 - du -sh . - | pushd the-dir if [[ \"${GITLAB_OBJECT_KIND}\" == 'push' ]]; then echo \"it's from push\" git checkout ${BRANCH_NAME} # git clean -fdx && git reset --hard && git pull else echo \"it's from MR\" rsync -zrvh ${env.WORKSPACE}/subdir/* . fi popd","title":"Groovy to task"},{"location":"vars/index.html","text":"Overview \u00b6 Jen Groovy - Jenkins Task Execution Library Jen implemented as a step for scripted pipelines, allowing to run Taskfile as it were native jenkins stage Usage \u00b6 Include in your scripted pipeline next block: catchError { dir ( 'tutorials/pyprjs/01-app-pydeps/repo_pydeps' ){ jen . step_stages_from_tasks ( jg , '.' , 'Taskfile.yml' , 'ci-build' ) } } Stage (In Place) Generation From TaskFile \u00b6 It will create stage from each command in list of task ci-build in Taskfile: ci-build : desc : build as ci cd cmds : - task venv-install - task test-ci - task run Generated stages will be something like: stage ( 'task venv-install' ){ sh 'task venv-install' } stage ( 'task test-ci' ){ sh 'task test-ci' } stage ( 'task run' ){ sh 'task run' } Roadmap \u00b6 JEN-01 create parallel stages execution for deps calculation not for root tasks (why? better not now) only for stage task (not for steps) dependencies will be calculated using parallel jenkins execution - on same node? - different node? - docker agent? - aggegation stage will include steps as commands (after [JEN-02]) JEN-02 break each stage commands to steps in root task each command is a stage in jenkins currently with one step however if stage is task call it can be broken to steps each step will reperesent a command from a stage-task","title":"Overview"},{"location":"vars/index.html#overview","text":"Jen Groovy - Jenkins Task Execution Library Jen implemented as a step for scripted pipelines, allowing to run Taskfile as it were native jenkins stage","title":"Overview"},{"location":"vars/index.html#usage","text":"Include in your scripted pipeline next block: catchError { dir ( 'tutorials/pyprjs/01-app-pydeps/repo_pydeps' ){ jen . step_stages_from_tasks ( jg , '.' , 'Taskfile.yml' , 'ci-build' ) } }","title":"Usage"},{"location":"vars/index.html#stage-in-place-generation-from-taskfile","text":"It will create stage from each command in list of task ci-build in Taskfile: ci-build : desc : build as ci cd cmds : - task venv-install - task test-ci - task run Generated stages will be something like: stage ( 'task venv-install' ){ sh 'task venv-install' } stage ( 'task test-ci' ){ sh 'task test-ci' } stage ( 'task run' ){ sh 'task run' }","title":"Stage (In Place) Generation From TaskFile"},{"location":"vars/index.html#roadmap","text":"JEN-01 create parallel stages execution for deps calculation not for root tasks (why? better not now) only for stage task (not for steps) dependencies will be calculated using parallel jenkins execution - on same node? - different node? - docker agent? - aggegation stage will include steps as commands (after [JEN-02]) JEN-02 break each stage commands to steps in root task each command is a stage in jenkins currently with one step however if stage is task call it can be broken to steps each step will reperesent a command from a stage-task","title":"Roadmap"}]}